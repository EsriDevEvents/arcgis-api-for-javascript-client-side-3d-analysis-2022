import{J as i,K as o,L as _,M as f,ap as S,fy as v,dJ as C,V as g,O as n,fz as w,bq as D,fA as G,fB as u,f5 as x,fC as P,dR as $,cR as H,aM as O,cB as R}from"./vendor.c28ea743.js";import{o as q}from"./drapedUtils.afb6a99b.js";let e=class extends f{constructor(t){super(t),this.layer=null,this.interactive=!0,this.selectable=!1,this.grabbable=!0,this.dragging=!1,this.cursor=null,this.events=new S.EventEmitter,this._circleCollisionCache=null,this._graphicSymbolChangedHandle=null,this._originalSymbol=null}set graphic(t){this._circleCollisionCache=null,this._originalSymbol=t.symbol,this._set("graphic",t),this.attachSymbolChanged()}get elevationInfo(){const t="elevationInfo"in this.graphic.layer&&this.graphic.layer.elevationInfo,a=v(this.graphic),l=t?t.offset:0;return new C({mode:a,offset:l})}set focusedSymbol(t){t!==this._get("focusedSymbol")&&(this._set("focusedSymbol",t),this._updateGraphicSymbol(),this._circleCollisionCache=null)}grabbableForEvent(){return!0}set grabbing(t){t!==this._get("grabbing")&&(this._set("grabbing",t),this._updateGraphicSymbol())}set hovering(t){t!==this._get("hovering")&&(this._set("hovering",t),this._updateGraphicSymbol())}set selected(t){t!==this._get("selected")&&(this._set("selected",t),this._updateGraphicSymbol(),this.events.emit("select-changed",{action:t?"select":"deselect"}))}get _focused(){return this._get("hovering")||this._get("grabbing")}destroy(){this.detachSymbolChanged(),this._resetGraphicSymbol(),this._set("view",null)}intersectionDistance(t){const a=this.graphic;if(a.visible===!1)return null;const l=a.geometry;if(g(l))return null;const s=this._get("focusedSymbol"),p=n(s)?s:a.symbol;return this.view.type==="2d"?this._intersectDistance2D(this.view,t,l,p):this._intersectDistance3D(this.view,t,a)}attach(){this.attachSymbolChanged(),n(this.layer)&&this.layer.add(this.graphic)}detach(){this.detachSymbolChanged(),this._resetGraphicSymbol(),n(this.layer)&&this.layer.remove(this.graphic)}attachSymbolChanged(){this.detachSymbolChanged(),this._graphicSymbolChangedHandle=this.graphic.watch("symbol",t=>{n(t)&&t!==this.focusedSymbol&&t!==this._originalSymbol&&(this._originalSymbol=t,this._focused&&n(this.focusedSymbol)&&(this.graphic.symbol=this.focusedSymbol))},!0)}detachSymbolChanged(){n(this._graphicSymbolChangedHandle)&&(this._graphicSymbolChangedHandle.remove(),this._graphicSymbolChangedHandle=null)}_updateGraphicSymbol(){this.graphic.symbol=this._focused&&n(this.focusedSymbol)?this.focusedSymbol:this._originalSymbol}_resetGraphicSymbol(){this.graphic.symbol=this._originalSymbol}_intersectDistance2D(t,a,l,s){if(s=s||w(l),g(s))return null;const p=1;let r=this._circleCollisionCache;if(l.type!=="point"||s.type!=="simple-marker")return q(a,l,t)?p:null;if(g(r)||!r.originalPoint.equals(l)){const h=l,c=t.spatialReference;if(D(h.spatialReference,c)){const y=G(h,c);r={originalPoint:h.clone(),mapPoint:y,radiusPx:u(s.size)},this._circleCollisionCache=r}}if(n(r)){const h=x(a,I),c=t.toScreen(r.mapPoint),y=r.radiusPx,b=c.x+u(s.xoffset),m=c.y-u(s.yoffset);return P(h,[b,m])<y*y?p:null}return null}_intersectDistance3D(t,a,l){const s=t.toMap(a,{include:[l]});return s&&$(s,d,t.renderSpatialReference)?H(d,t.state.camera.eye):null}};i([o({constructOnly:!0,nonNullable:!0})],e.prototype,"graphic",null),i([o({readOnly:!0})],e.prototype,"elevationInfo",null),i([o({constructOnly:!0,nonNullable:!0})],e.prototype,"view",void 0),i([o({value:null})],e.prototype,"focusedSymbol",null),i([o({constructOnly:!0})],e.prototype,"layer",void 0),i([o()],e.prototype,"interactive",void 0),i([o()],e.prototype,"selectable",void 0),i([o()],e.prototype,"grabbable",void 0),i([o({value:!1})],e.prototype,"grabbing",null),i([o()],e.prototype,"dragging",void 0),i([o()],e.prototype,"hovering",null),i([o({value:!1})],e.prototype,"selected",null),i([o()],e.prototype,"cursor",void 0),e=i([_("esri.views.interactive.GraphicManipulator")],e);const d=O(),I=R();export{e as v};
