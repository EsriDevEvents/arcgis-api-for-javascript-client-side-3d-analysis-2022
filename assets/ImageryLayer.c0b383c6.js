var yt=Object.defineProperty,ft=Object.defineProperties;var gt=Object.getOwnPropertyDescriptors;var Be=Object.getOwnPropertySymbols;var vt=Object.prototype.hasOwnProperty,Rt=Object.prototype.propertyIsEnumerable;var We=(r,i,e)=>i in r?yt(r,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[i]=e,g=(r,i)=>{for(var e in i||(i={}))vt.call(i,e)&&We(r,e,i[e]);if(Be)for(var e of Be(i))Rt.call(i,e)&&We(r,e,i[e]);return r},J=(r,i)=>ft(r,gt(i));import{J as s,K as l,hX as O,jd as P,i6 as bt,L as A,iO as L,cm as j,sl as wt,ln as Le,hY as de,m5 as St,j as B,sK as U,k as ee,iM as Ce,O as b,nC as oe,nY as Re,nE as be,bU as F,jC as qe,tw as nt,gi as st,pq as Ue,jp as He,bZ as xt,aB as It,jJ as re,aP as ye,tr as Ft,nP as Nt,i0 as Tt,bW as Dt,V as ne,b4 as E,tx as se,ty as Pt,br as Ct,a8 as Ne,tz as Ot,tA as _t,tB as Vt,H as jt,g as Mt,tC as At,tD as $t,sS as Jt,tk as Et,sU as zt,sT as Lt,nI as qt,nJ as Ut,ti as Ht,nH as kt,nK as Qt,a5 as Gt,nM as Bt,i2 as Wt,tE as Kt,te as Xt,i4 as Zt,i5 as Yt}from"./vendor.c28ea743.js";import{n as ei,p as Oe,o as te,i as ge,l as ti,a as ii,u as ri,k as ni,L as si,j as ai,e as oi,b as li}from"./rasterRendererHelper.3e1677ba.js";import{u as ui,a as at,C as ot,f as pi,l as Te,h as ci,T as mi,S as Ke,c as di,e as hi}from"./dataUtils.e0d7ab35.js";import{u as yi}from"./PixelBlock.4c41d3fc.js";import"./colorUtils.7c4b6dc5.js";var _e;const we=new Set(["raster","raster2","dem","fillraster"]),Se=new Set(["rasters"]),Xe=r=>r&&r.rasterFunction?z.fromJSON(r):r,De=r=>r&&r instanceof z?r.toJSON():r,Ve=r=>(r==null?void 0:r.functionName)&&!r.declaredClass,Ze=r=>Ve(r)?new z(r):r,fi=r=>{if(r==null)return null;r=j(r);const i={};for(const e of Object.keys(r))we.has(e.toLowerCase())?i[e]=Xe(r[e]):Se.has(e.toLowerCase())&&Array.isArray(r[e])?i[e]=r[e].map(Xe):i[e]=r[e];return i};let z=_e=class extends L{constructor(r){super(r),this.functionName=null,this.outputPixelType="unknown",this.variableName=null,this.rasterFunctionDefinition=null}set functionArguments(r){if(r){const i=Object.keys(r);if(i.some(e=>we.has(e.toLowerCase())&&Ve(r[e]))||i.some(e=>Se.has(e.toLowerCase())&&Array.isArray(r[e])&&r[e].some(t=>Ve(t)))){r=j(r);for(const e of i)we.has(e.toLowerCase())?r[e]=Ze(r[e]):Se.has(e.toLowerCase())&&Array.isArray(r[e])&&(r[e]=r[e].map(t=>Ze(t)))}}this._set("functionArguments",r)}readFunctionArguments(r){return fi(r)}writeFunctionArguments(r,i,e){const t={};for(const n of Object.keys(r))we.has(n.toLowerCase())?t[n]=De(r[n]):Se.has(n.toLowerCase())&&Array.isArray(r[n])?t[n]=r[n].map(De):t[n]=De(r[n]);i[e]=t}readFunctionName(r,i){const e=i.rasterFunctionInfos;return i.name||(e&&e.length&&e[0].name!=="None"?e[0].name:i.rasterFunctionDefinition?i.rasterFunctionDefinition.name:i.rasterFunction)}clone(){return new _e({functionName:this.functionName,functionArguments:j(this.functionArguments),outputPixelType:this.outputPixelType,variableName:this.variableName,rasterFunctionDefinition:j(this.rasterFunctionDefinition)})}};s([l({json:{type:Object,name:"rasterFunctionArguments"}})],z.prototype,"functionArguments",null),s([O("functionArguments")],z.prototype,"readFunctionArguments",null),s([P("functionArguments")],z.prototype,"writeFunctionArguments",null),s([l({json:{type:String,write:{target:"rasterFunction"}}})],z.prototype,"functionName",void 0),s([O("functionName",["rasterFunction","rasterFunctionInfos","rasterFunctionDefinition"])],z.prototype,"readFunctionName",null),s([bt({C128:"c128",C64:"c64",F32:"f32",F64:"f64",S16:"s16",S32:"s32",S8:"s8",U1:"u1",U16:"u16",U2:"u2",U32:"u32",U4:"u4",U8:"u8",UNKNOWN:"unknown"},{ignoreUnknown:!1}),l({json:{default:"unknown"}})],z.prototype,"outputPixelType",void 0),s([l({type:String,json:{read:!0,write:!0}})],z.prototype,"variableName",void 0),s([l({type:Object,json:{name:"rasterFunctionDefinition"}})],z.prototype,"rasterFunctionDefinition",void 0),z=_e=s([A("esri.layers.support.RasterFunction")],z);const w=z,gi={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},vi={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},Ri={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},bi=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function lt(r){return bi.has(r.type)}function Ye(r,i){if(!r||!i)return j(r||i);const e=j(r);if(i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),ut(e.rasterFunctionDefinition.arguments,i)}else i.functionName.toLowerCase()!=="none"&&(pt(e.functionArguments).Raster=i);return e}function ut(r,i){for(const e in r)e.toLowerCase()==="raster"&&(r[e].type==="RasterFunctionVariable"?(r[e]=i.rasterFunctionDefinition,r[e].type="RasterFunctionTemplate"):r[e].type==="RasterFunctionTemplate"&&ut(r[e].arguments,i))}function W(r){const i=j(gi[r.functionName+"Function"]),e=r.functionArguments;for(const t in e)t.toLowerCase()==="raster"?(i.arguments[t]=W(e[t]),i.arguments[t].type="RasterFunctionTemplate"):t.toLowerCase()==="colormap"?(i.arguments[t].value=Pi(e[t]),i.arguments.ColorSchemeType.value=0):i.arguments[t].value=e[t];return i}function wi(r,i){switch(i=i||{},r.type){case"raster-stretch":return Ii(r,i);case"class-breaks":return Fi(r,i);case"unique-value":return Ni(r,i);case"raster-colormap":return Ti(r,i);case"vector-field":return Si(r,i);case"raster-shaded-relief":return xi(r,i);case"flow":throw new Error("Unsupported rendering rule.")}}function pt(r){const i=r.Raster;return i&&i.declaredClass==="esri.layers.support.RasterFunction"?pt(i.functionArguments):r}const fe={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Si(r,i){const e=new w;e.functionName="VectorFieldRenderer";const{dataType:t,bandProperties:n}=i,a=t==="vector-uv";let o,u;n&&n.length===2&&(o=n.map(R=>R.BandName.toLowerCase()).indexOf("magnitude"),u=n.map(R=>R.BandName.toLowerCase()).indexOf("direction")),o!==-1&&o!==null||(o=0,u=1);const p=r.rotationType==="arithmetic"?1:2,c=r.flowRepresentation==="flow-from"?0:1,m=r.visualVariables?r.visualVariables.find(R=>R.field==="Magnitude"):new wt,y={magnitudeBandID:o,directionBandID:u,isUVComponents:a,referenceSystem:p,massFlowAngleRepresentation:c,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:Ri[r.style.toLowerCase().replace("-","_")],minimumMagnitude:m.minDataValue,maximumMagnitude:m.maxDataValue,minimumSymbolSize:m.minSize,maximumSymbolSize:m.maxSize};return e.functionArguments=y,i.convertToRFT?new w({rasterFunctionDefinition:W(e)}):e}function xi(r,i){const e=i.convertToRFT;if(i.dataType!=="elevation")return new w;const t=new w;t.functionName="Hillshade";const n=r.hillshadeType==="traditional"?0:1,a=r.scalingType==="none"?1:3,o={HillshadeType:n,SlopeType:a,ZFactor:r.zFactor};return n===0&&(o.Azimuth=r.azimuth,o.Altitude=r.altitude),a===3&&(o.PSPower=r.pixelSizePower,o.PSZFactor=r.pixelSizeFactor),t.functionArguments=o,t.variableName="Raster",r.colorRamp&&(t.functionName="ShadedRelief",e?o.ColorRamp=at(r.colorRamp):o.Colormap=ot(r.colorRamp,256)),e?new w({rasterFunctionDefinition:W(t)}):t}function Ii(r,i){const e=i.convertToRFT,t=new w;t.functionName="Stretch";const n=fe[ei.toJSON(r.stretchType)],a="u8",o={StretchType:n,Statistics:Di(r.statistics),DRA:r.dynamicRangeAdjustment,UseGamma:r.useGamma,Gamma:r.gamma,ComputeGamma:r.computeGamma};if(r.outputMin!=null&&(o.Min=r.outputMin),r.outputMax!=null&&(o.Max=r.outputMax),n===fe.standardDeviation?(o.NumberOfStandardDeviations=r.numberOfStandardDeviations,t.outputPixelType=a):n===fe.percentClip?(o.MinPercent=r.minPercent,o.MaxPercent=r.maxPercent,t.outputPixelType=a):n===fe.minMax?t.outputPixelType=a:n===fe.sigmoid&&(o.SigmoidStrengthLevel=r.sigmoidStrengthLevel),t.functionArguments=o,t.variableName="Raster",r.colorRamp){const u=r.colorRamp,p=new w;if(e)p.functionArguments={ColorRamp:at(u)};else{const c=pi(u);c?p.functionArguments={colorRamp:c}:!i.convertColorRampToColormap||u.type!=="algorithmic"&&u.type!=="multipart"?p.functionArguments={colorRamp:r.colorRamp.toJSON()}:p.functionArguments={Colormap:ot(u,256)}}return p.variableName="Raster",p.functionName="Colormap",p.functionArguments.Raster=t,e?new w({rasterFunctionDefinition:W(p)}):p}return e?new w({rasterFunctionDefinition:W(t)}):t}function Fi(r,i){const e=[],t=[],n=[],a=[],{pixelType:u,rasterAttributeTable:p}=i,c=p&&p.features,m=ct(p);if(c&&Array.isArray(c)&&r.classBreakInfos){r.classBreakInfos.forEach((h,I)=>{const S=h.symbol.color;let C;S.a&&c.forEach(N=>{C=N.attributes[r.field],(C>=h.minValue&&C<h.maxValue||I===r.classBreakInfos.length-1&&C>=h.minValue)&&a.push([N.attributes[m],S.r,S.g,S.b])})});const v=u?Fe(a,u):a,d=new w;return d.functionName="Colormap",d.functionArguments={},d.functionArguments.Colormap=v,d.variableName="Raster",i.convertToRFT?new w({rasterFunctionDefinition:W(d)}):d}r.classBreakInfos.forEach((v,d)=>{const h=v.symbol&&v.symbol.color;h.a?(d===0?e.push(v.minValue,v.maxValue+1e-6):e.push(v.minValue+1e-6,v.maxValue+1e-6),t.push(d),a.push([d,h.r,h.g,h.b])):n.push(v.minValue,v.maxValue)});const y=u?Fe(a,u):a,R=new w;R.functionName="Remap",R.functionArguments={InputRanges:e,OutputValues:t,NoDataRanges:n},R.variableName="Raster";const f=new w;return f.functionName="Colormap",f.functionArguments={Colormap:y,Raster:R},i.convertToRFT?new w({rasterFunctionDefinition:W(f)}):f}function Fe(r,i){const e=vi[String(i).toLowerCase()];return e&&r.push([Math.floor(e[0]-1),0,0,0],[Math.ceil(e[1]+1),0,0,0]),r}function ct(r){if(!r)return;const{fields:i}=r,e=i&&i.find(t=>t&&t.name&&t.name.toLowerCase()==="value");return e&&e.name}function Ni(r,i){var e,t;const n=[],{pixelType:a,rasterAttributeTable:o}=i,u=o&&o.features,p=ct(o),c=(e=r.defaultSymbol)==null||(t=e.color)==null?void 0:t.toRgb(),m=r.uniqueValueInfos;if(m)if(u){const f=new Map;m.forEach(d=>{var h;const I=d.value,S=(h=d.symbol.color)==null?void 0:h.toRgb();I!=null&&S&&f.set(String(I),S)});const v=r.field;u.forEach(({attributes:d})=>{const h=String(d[v]),I=d[p];if(f.has(h)){const S=f.get(h);n.push([I,...S])}else c&&n.push([I,...c])})}else for(let f=0;f<m.length;f++){const v=m[f],d=v.symbol.color,h=+v.value;if(d!=null&&d.a){if(isNaN(h))return null;n.push([h,d.r,d.g,d.b])}}const y=a&&n.length>0?Fe(n,a):n,R=new w;return R.functionName="Colormap",R.functionArguments={},R.functionArguments.Colormap=y,R.variableName="Raster",i.convertToRFT?new w({rasterFunctionDefinition:W(R)}):R}function Ti(r,i){const e=r.extractColormap();if(!e||e.length===0)return;const{pixelType:t}=i,n=t?Fe(e,t):e,a=new w;return a.functionName="Colormap",a.functionArguments={},a.functionArguments.Colormap=n,i.convertToRFT?new w({rasterFunctionDefinition:W(a)}):a}function Di(r){const i=[];return r.forEach(e=>{const t=e;if(Array.isArray(t))i.push(t);else{if(t.min==null||t.max==null)return;const n=[t.min,t.max,t.avg||0,t.stddev||0];i.push(n)}}),i}function Pi(r){const i=[],e=[];return r.forEach(t=>{i.push(t[0]),e.push(ui([...t.slice(1),255]))}),{type:"RasterColormap",values:i,colors:e}}var je;const ve=Le()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),Me=Le()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function Ci(r){let i;switch(r?r.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":i="esriMosaicAttribute";break;case"lockraster":i="esriMosaicLockRaster";break;case"center":i="esriMosaicCenter";break;case"northwest":i="esriMosaicNorthwest";break;case"nadir":i="esriMosaicNadir";break;case"viewpoint":i="esriMosaicViewpoint";break;case"seamline":i="esriMosaicSeamline";break;default:i="esriMosaicNone"}return Me.fromJSON(i)}let V=je=class extends L{constructor(r){super(r),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(r,i){return i.ascending!=null?i.ascending:i.sortAscending==null||i.sortAscending}readMethod(r,i){return Ci(i.mosaicMethod||i.defaultMosaicMethod)}readOperation(r,i){const e=i.mosaicOperation,t=i.mosaicOperator&&i.mosaicOperator.toLowerCase(),n=e||(t?ve.toJSON(t):null);return ve.fromJSON(n)||"first"}castSortValue(r){return r==null||typeof r=="string"||typeof r=="number"?r:`${r}`}clone(){return new je({ascending:this.ascending,itemRenderingRule:j(this.itemRenderingRule),lockRasterIds:j(this.lockRasterIds),method:this.method,multidimensionalDefinition:j(this.multidimensionalDefinition),objectIds:j(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:j(this.viewpoint),where:this.where})}};s([l({type:Boolean,json:{write:!0}})],V.prototype,"ascending",void 0),s([O("ascending",["ascending","sortAscending"])],V.prototype,"readAscending",null),s([l({type:w,json:{write:!0}})],V.prototype,"itemRenderingRule",void 0),s([l({type:[de],json:{write:{overridePolicy(){return{enabled:this.method==="lock-raster"}}}}})],V.prototype,"lockRasterIds",void 0),s([l({type:String,json:{type:Me.jsonValues,write:{target:"mosaicMethod",writer:Me.write}}})],V.prototype,"method",void 0),s([O("method",["mosaicMethod","defaultMosaicMethod"])],V.prototype,"readMethod",null),s([l({type:[Oe],json:{write:!0}})],V.prototype,"multidimensionalDefinition",void 0),s([l({type:[de],json:{name:"fids",write:!0}})],V.prototype,"objectIds",void 0),s([l({json:{type:ve.jsonValues,read:{reader:ve.read},write:{target:"mosaicOperation",writer:ve.write}}})],V.prototype,"operation",void 0),s([O("operation",["mosaicOperation","mosaicOperator"])],V.prototype,"readOperation",null),s([l({type:String,json:{write:{overridePolicy(){return{enabled:this.method==="attribute"}}}}})],V.prototype,"sortField",void 0),s([l({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:this.method==="attribute",allowNull:!0}}}}})],V.prototype,"sortValue",void 0),s([St("sortValue")],V.prototype,"castSortValue",null),s([l({type:B,json:{write:!0}})],V.prototype,"viewpoint",void 0),s([l({type:String,json:{write:!0}})],V.prototype,"where",void 0),V=je=s([A("esri.layers.support.MosaicRule")],V);const H=V;let T=class extends L{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.bandIds=void 0,this.compression=void 0,this.compressionQuality=void 0,this.compressionTolerance=.01,this.format=null,this.interpolation=null,this.noData=null,this.noDataInterpretation=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(r,i,e){this.layer.version<10.3||(i[e]=r)}writeCompressionQuality(r,i,e){this.format&&this.format.toLowerCase().indexOf("jpg")>-1&&r!=null&&(i[e]=r)}writeCompressionTolerance(r,i,e){this.format==="lerc"&&r!=null&&(i[e]=r)}writeLercVersion(r,i,e){this.format==="lerc"&&this.layer.version>=10.5&&(i[e]=r)}get version(){const r=this.layer;return r.commitProperty("bandIds"),r.commitProperty("format"),r.commitProperty("compressionQuality"),r.commitProperty("compressionTolerance"),r.commitProperty("interpolation"),r.commitProperty("noData"),r.commitProperty("noDataInterpretation"),r.commitProperty("mosaicRule"),r.commitProperty("renderingRule"),r.commitProperty("adjustAspectRatio"),r.commitProperty("pixelFilter"),r.commitProperty("renderer"),r.commitProperty("definitionExpression"),(this._get("version")||0)+1}set version(r){this._set("version",r)}get mosaicRule(){const r=this.layer;let i=r.mosaicRule;const e=r.definitionExpression;return i?e&&e!==i.where&&(i=i.clone(),i.where=e):e&&(i=new H({where:e})),i}get renderingRule(){const r=this.layer;let i=r.renderingRule;const e=r.pixelFilter,t=!r.format||r.format.indexOf("jpg")>-1||r.format.indexOf("png")>-1;return i=this._addResampleRasterFunction(i),t&&!e&&(i=this.combineRendererWithRenderingRule()),i}combineRendererWithRenderingRule(){var r;const i=this.layer,{rasterInfo:e,renderingRule:t,renderer:n}=i;return!n||!lt(n)?t:Ye(wi(n,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandProperties:(r=e.keyProperties)==null?void 0:r.BandProperties,convertColorRampToColormap:i.version<10.6,convertToRFT:!(t==null||!t.rasterFunctionDefinition)}),t)}_addResampleRasterFunction(r){var i;if(((i=this.layer.renderer)==null?void 0:i.type)!=="vector-field"||(r==null?void 0:r.functionName)==="Resample")return r;const e=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10;let t=new w({functionName:"Resample",functionArguments:{ResamplingType:e,InputCellSize:{x:this.layer.pixelSizeX,y:this.layer.pixelSizeY}}});return t=r!=null&&r.rasterFunctionDefinition?new w({rasterFunctionDefinition:W(t)}):t,Ye(t,r)}};s([l()],T.prototype,"layer",void 0),s([l({json:{write:!0}})],T.prototype,"adjustAspectRatio",void 0),s([P("adjustAspectRatio")],T.prototype,"writeAdjustAspectRatio",null),s([l({json:{write:!0}}),U("layer.bandIds")],T.prototype,"bandIds",void 0),s([l({json:{write:!0}})],T.prototype,"compression",void 0),s([l({json:{write:!0}}),U("layer.compressionQuality")],T.prototype,"compressionQuality",void 0),s([P("compressionQuality")],T.prototype,"writeCompressionQuality",null),s([l({json:{write:!0}}),U("layer.compressionTolerance")],T.prototype,"compressionTolerance",void 0),s([P("compressionTolerance")],T.prototype,"writeCompressionTolerance",null),s([l({json:{write:!0}}),U("layer.format")],T.prototype,"format",void 0),s([l({type:String,json:{read:{reader:te.read},write:{writer:te.write}}}),U("layer.interpolation")],T.prototype,"interpolation",void 0),s([l({json:{write:!0}}),U("layer.noData")],T.prototype,"noData",void 0),s([l({type:String,json:{read:{reader:ge.read},write:{writer:ge.write}}}),U("layer.noDataInterpretation")],T.prototype,"noDataInterpretation",void 0),s([l({json:{write:!0}})],T.prototype,"pixelType",void 0),s([l({json:{write:!0}})],T.prototype,"lercVersion",void 0),s([P("lercVersion")],T.prototype,"writeLercVersion",null),s([l({type:Number})],T.prototype,"version",null),s([l({json:{write:!0}})],T.prototype,"mosaicRule",null),s([l({json:{write:!0}})],T.prototype,"renderingRule",null),T=s([A("esri.layers.mixins.ExportImageServiceParameters")],T);let ce=class extends L{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};s([l({type:Number,json:{write:!0}})],ce.prototype,"north",void 0),s([l({type:Number,json:{write:!0}})],ce.prototype,"up",void 0),s([l({type:ee,json:{write:!0}})],ce.prototype,"spatialReference",void 0),ce=s([A("esri.rest.support.ImageAngleResult")],ce);const Oi=ce;let k=class extends L{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};s([l({json:{write:!0}})],k.prototype,"catalogItemVisibilities",void 0),s([l({type:Ce,json:{write:!0}})],k.prototype,"catalogItems",void 0),s([l({type:B,json:{write:!0}})],k.prototype,"location",void 0),s([l({json:{write:!0}})],k.prototype,"name",void 0),s([l({json:{write:!0}})],k.prototype,"objectId",void 0),s([l({json:{write:!0}})],k.prototype,"processedValues",void 0),s([l({json:{write:!0}})],k.prototype,"properties",void 0),s([l({json:{write:!0}})],k.prototype,"value",void 0),k=s([A("esri.rest.support.ImageIdentifyResult")],k);const _i=k;let Z=class extends L{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};s([l({json:{write:!0}})],Z.prototype,"attributes",void 0),s([l({type:B,json:{write:!0}})],Z.prototype,"location",void 0),s([l({json:{write:!0}})],Z.prototype,"locationId",void 0),s([l({json:{write:!0}})],Z.prototype,"rasterId",void 0),s([l({json:{write:!0}})],Z.prototype,"resolution",void 0),s([l({json:{write:!0}})],Z.prototype,"pixelValue",void 0),Z=s([A("esri.rest.support.ImageSample")],Z);const Vi=Z;let xe=class extends L{constructor(){super(...arguments),this.samples=null}};s([l({type:[Vi],json:{write:!0}})],xe.prototype,"samples",void 0),xe=s([A("esri.rest.support.ImageSampleResult")],xe);const ji=xe;let Ie=class extends L{constructor(){super(...arguments),this.geometries=null}};s([l({json:{write:!0}})],Ie.prototype,"geometries",void 0),Ie=s([A("esri.rest.support.ImagePixelLocationResult")],Ie);const Mi=Ie;function mt(r){const i=r==null?void 0:r.time;if(i&&(i.start!=null||i.end!=null)){const e=[];i.start!=null&&e.push(i.start),i.end!=null&&e.indexOf(i.end)===-1&&e.push(i.end),r.time=e.join(",")}}async function dt(r,i,e){const t=oe(r),n=i.geometry?[i.geometry]:[],a=await qe(n),o=i.toJSON();mt(o);const u=a&&a[0];b(u)&&(o.geometry=u.toJSON());const p=Re(g(J(g({},t.query),{f:"json"}),o));return be(p,e)}async function Ai(r,i,e){var t;const n=i.toJSON();b(n.angleName)&&(n.angleName=n.angleName.join(",")),b(i.point)&&(t=i.point.spatialReference)!=null&&t.imageCoordinateSystem&&(n.point.spatialReference=ke(i.point.spatialReference)),b(i.spatialReference)&&i.spatialReference.imageCoordinateSystem&&(n.spatialReference=ht(i.spatialReference));const a=oe(r),o=Re(g(J(g({},a.query),{f:"json"}),n)),u=be(o,e),{data:p}=await F(`${a.path}/computeAngles`,u);return p.spatialReference=p.spatialReference?p.spatialReference.geodataXform!=null?new ee({wkid:0,imageCoordinateSystem:p.spatialReference}):ee.fromJSON(p.spatialReference):null,p.north==="NaN"&&(p.north=null),p.up==="NaN"&&(p.up=null),new Oi(p)}async function $i(r,i,e){const t=i.toJSON(),{geometries:n}=i;for(let m=0;m<n.length;m++){var a;(a=n[m].spatialReference)!=null&&a.imageCoordinateSystem&&(t.geometries.geometries[m].spatialReference=ke(n[m].spatialReference))}const o=oe(r),u=Re(g(J(g({},o.query),{f:"json"}),t)),p=be(u,e),{data:c}=await F(`${o.path}/computePixelLocation`,p);return Mi.fromJSON(c)}async function Ji(r,i,e){const t=await dt(r,i,e),n=oe(r),{data:a}=await F(`${n.path}/computeStatisticsHistograms`,t),{statistics:o}=a;return o!=null&&o.length&&o.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:o,histograms:a.histograms}}async function Ei(r,i,e){const t=await dt(r,i,e),n=oe(r),{data:a}=await F(`${n.path}/computeHistograms`,t);return{histograms:a.histograms}}async function zi(r,i,e){var t,n;const a=i.toJSON();mt(a),(t=a.outFields)!=null&&t.length&&(a.outFields=a.outFields.join(","));const o=await qe(i.geometry),u=o==null?void 0:o[0];b(u)&&(a.geometry=u.toJSON());const p=oe(r),c=Re(g(J(g({},p.query),{f:"json"}),a)),m=be(c,e),{data:y}=await F(`${p.path}/getSamples`,m),R=y==null||(n=y.samples)==null?void 0:n.map(f=>{const v=f.value==="NaN"||f.value===""?null:f.value.split(" ").map(d=>Number(d));return J(g({},f),{pixelValue:v})});return ji.fromJSON({samples:R})}async function et(r,i,e){const t=oe(r),n=i.geometry?[i.geometry]:[];return qe(n).then(a=>{const o=i.toJSON(),u=a&&a[0];b(u)&&(o.geometry=JSON.stringify(u.toJSON()));const p=Re(g(J(g({},t.query),{f:"json"}),o)),c=be(p,e);return F(t.path+"/identify",c)}).then(a=>_i.fromJSON(a.data))}function ke(r){const{imageCoordinateSystem:i}=r;if(i){const{id:e,referenceServiceName:t}=i;return e!=null?t?{icsid:e,icsns:t}:{icsid:e}:{ics:i}}return r.toJSON()}function ht(r,i){const e=ke(r),{icsid:t,icsns:n,wkid:a}=e;return t!=null?n==null||i!=null&&i.toLowerCase().includes("/"+n.toLowerCase()+"/")?`0:${t}`:JSON.stringify(e):a?a.toString():JSON.stringify(e)}var Ae;let ae=Ae=class extends L{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new Ae(j({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};s([l({type:[String],json:{name:"angleName",write:!0}})],ae.prototype,"angleNames",void 0),s([l({type:B,json:{write:!0}})],ae.prototype,"point",void 0),s([l({type:ee,json:{write:!0}})],ae.prototype,"spatialReference",void 0),s([l({type:de,json:{write:!0}})],ae.prototype,"rasterId",void 0),ae=Ae=s([A("esri.rest.support.ImageAngleParameters")],ae);const Li=ae;var $e;let G=$e=class extends L{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(r,i,e){r!=null&&(i.geometryType=He(r),i[e]=r.toJSON())}clone(){return new $e(j({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};s([l({types:nt,json:{read:st}})],G.prototype,"geometry",void 0),s([P("geometry")],G.prototype,"writeGeometry",null),s([l({type:H,json:{write:!0}})],G.prototype,"mosaicRule",void 0),s([l({type:w,json:{write:!0}})],G.prototype,"renderingRule",void 0),s([l({type:B,json:{write:!0}})],G.prototype,"pixelSize",void 0),s([l({json:{write:!0}})],G.prototype,"raster",void 0),s([l({type:Ue,json:{read:{source:"time"},write:{target:"time"}}})],G.prototype,"timeExtent",void 0),G=$e=s([A("esri.rest.support.ImageHistogramParameters")],G);const tt=G;var Je;let D=Je=class extends L{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(r,i,e){r!=null&&(i.geometryType=He(r),i[e]=JSON.stringify(r.toJSON()))}set mosaicRule(r){let i=r;i&&i.mosaicMethod&&(i=H.fromJSON(J(g({},i.toJSON()),{mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation}))),this._set("mosaicRule",i)}writeMosaicRule(r,i,e){r!=null&&(i[e]=JSON.stringify(r.toJSON()))}set renderingRule(r){let i=r;i&&i.rasterFunction&&(i=w.fromJSON(J(g({},i.toJSON()),{rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments}))),this._set("renderingRule",i)}writeRenderingRule(r,i,e){r!=null&&(i[e]=JSON.stringify(r.toJSON())),r.rasterFunctionDefinition&&(i[e]=JSON.stringify(r.rasterFunctionDefinition))}writeRenderingRules(r,i,e){r!=null&&(i[e]=JSON.stringify(r.map(t=>t.rasterFunctionDefinition||t.toJSON())))}writePixelSize(r,i,e){r!=null&&(i[e]=JSON.stringify(r))}writeTimeExtent(r,i,e){if(r!=null){const t=b(r.start)?r.start.getTime():null,n=b(r.end)?r.end.getTime():null;i[e]=t!=null?n!=null?`${t},${n}`:`${t}`:null}}clone(){return new Je(j({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};s([l({json:{write:!0}})],D.prototype,"geometry",void 0),s([P("geometry")],D.prototype,"writeGeometry",null),s([l({type:H,json:{write:!0}})],D.prototype,"mosaicRule",null),s([P("mosaicRule")],D.prototype,"writeMosaicRule",null),s([l({type:w,json:{write:!0}})],D.prototype,"renderingRule",null),s([P("renderingRule")],D.prototype,"writeRenderingRule",null),s([l({type:[w],json:{write:!0}})],D.prototype,"renderingRules",void 0),s([P("renderingRules")],D.prototype,"writeRenderingRules",null),s([l({type:B,json:{write:!0}})],D.prototype,"pixelSize",void 0),s([P("pixelSize")],D.prototype,"writePixelSize",null),s([l({type:Boolean,json:{write:!0}})],D.prototype,"returnGeometry",void 0),s([l({type:Boolean,json:{write:!0}})],D.prototype,"returnCatalogItems",void 0),s([l({type:Boolean,json:{write:!0}})],D.prototype,"returnPixelValues",void 0),s([l({type:Number,json:{write:!0}})],D.prototype,"maxItemCount",void 0),s([l({type:Ue,json:{write:{target:"time"}}})],D.prototype,"timeExtent",void 0),s([P("timeExtent")],D.prototype,"writeTimeExtent",null),s([l({json:{write:!0}})],D.prototype,"raster",void 0),s([l({json:{write:!0}})],D.prototype,"viewId",void 0),s([l({type:Boolean,json:{write:!0}})],D.prototype,"processAsMultidimensional",void 0),D=Je=s([A("esri.rest.support.ImageIdentifyParameters")],D);const it=D;var Ee;let me=Ee=class extends L{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(r,i,e){i.geometries={geometryType:"esriGeometryPoint",geometries:r.map(t=>t.toJSON())}}clone(){return new Ee({geometries:this.geometries.map(r=>r.clone()),rasterId:this.rasterId})}};s([l({type:[B],json:{write:!0}})],me.prototype,"geometries",void 0),s([P("geometries")],me.prototype,"writeGeometry",null),s([l({type:de,json:{write:!0}})],me.prototype,"rasterId",void 0),me=Ee=s([A("esri.rest.support.ImagePixelLocationParameters")],me);const qi=me;var ze;let M=ze=class extends L{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(r,i,e){r!=null&&(i.geometryType=He(r),i[e]=r.toJSON())}set locations(r){if(r!=null&&r.length){const i=new xt({spatialReference:r[0].spatialReference});i.points=r.map(e=>[e.x,e.y]),this._set("locations",r),this.geometry=i}}clone(){return new ze(j({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};s([l({types:nt,json:{read:st}})],M.prototype,"geometry",void 0),s([P("geometry")],M.prototype,"writeGeometry",null),s([l()],M.prototype,"locations",null),s([l({type:String,json:{type:te.jsonValues,read:te.read,write:te.write}})],M.prototype,"interpolation",void 0),s([l({type:H,json:{write:!0}})],M.prototype,"mosaicRule",void 0),s([l({type:[String],json:{write:!0}})],M.prototype,"outFields",void 0),s([l({type:B,json:{write:!0}})],M.prototype,"pixelSize",void 0),s([l({type:String,json:{write:!0}})],M.prototype,"raster",void 0),s([l({type:Boolean,json:{write:!0}})],M.prototype,"returnFirstValueOnly",void 0),s([l({type:Number,json:{write:!0}})],M.prototype,"sampleDistance",void 0),s([l({type:Number,json:{write:!0}})],M.prototype,"sampleCount",void 0),s([l({type:Number,json:{write:!0}})],M.prototype,"sliceId",void 0),s([l({type:Ue,json:{read:{source:"time"},write:{target:"time"}}})],M.prototype,"timeExtent",void 0),M=ze=s([A("esri.rest.support.ImageSampleParameters")],M);const Ui=M,rt=It.getLogger("esri.layers.mixins.ArcGISImageService"),Pe=Le()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Hi=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ki=At($t,{min:0,max:255});function Qi(r){if(!r)return null;const i=JSON.stringify(r).match(/"rasterFunction":"(.*?")/gi),e=i==null?void 0:i.map(t=>t.replace('"rasterFunction":"',"").replace('"',""));return e?e.join("/"):null}const Gi=r=>{let i=class extends r{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._defaultServiceMosaicRule=null,this._serviceSourceType=null,this._serviceSupportsMosaicRule=null,this.rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandCount=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelSizeX=null,this.pixelSizeY=null,this.pixelFilter=null,this.raster=void 0,this.viewId=void 0,this.symbolizer=null,this.rasterAttributeTable=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new T({layer:this}))}readDefaultServiceMosaicRule(e,t){return this._serviceSupportsMosaicRule?H.fromJSON(t):null}readServiceSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||b(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||b(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(n=>typeof n=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,n){e!=null&&this.format!=="lerc"&&(t[n]=e)}writeCompressionTolerance(e,t,n){this.format==="lerc"&&e!=null&&(t[n]=e)}get fieldsIndex(){return this.fields?new Tt(this.fields):null}set format(e){e&&Hi.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=H.fromJSON(J(g({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}readMosaicRule(e,t){const n=e||t.mosaicRule;return n?H.fromJSON(n):this._isMosaicRuleSupported(t)?H.fromJSON(t):null}writeMosaicRule(e,t,n){let a=this.mosaicRule;const o=this.definitionExpression;a?o&&o!==a.where&&(a=a.clone(),a.where=o):o&&(a=new H({where:o})),this._isValidCustomizedMosaicRule(a)&&(t[n]=a.toJSON())}writeNoData(e,t,n){e!=null&&typeof e=="number"&&(t[n]=ki(e))}readObjectIdField(e,t){if(!e){const n=t.fields.filter(a=>a.type==="esriFieldTypeOID"||a.type==="oid");e=n&&n[0]&&n[0].name}return e}get parsedUrl(){return this.url?Dt(this.url):null}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,n){var a,o;const u=t==null||(a=t.layerDefinition)==null||(o=a.drawingInfo)==null?void 0:o.renderer,p=ri(u,n);return p==null?null:(p.type==="vector-field"&&t.symbolTileSize&&!u.symbolTileSize&&(p.symbolTileSize=t.symbolTileSize),lt(p)||rt.warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),p)}writeRenderer(e,t,n){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){const e=this.rasterAttributeTableFieldPrefix||"Raster.",t=new re({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new re({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),a=new re({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let o=this.fields?j(this.fields):[];o.push(n),this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0&&o.push(t),this.version>=10.4&&b(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(p=>p.name.toLowerCase()==="none")&&o.push(a),b(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(p=>p.name.toLowerCase()!=="none").forEach(p=>{o.push(new re({name:"Raster.ServicePixelValue."+p.name,alias:p.name,domain:null,editable:!1,length:50,type:"string"}))}),this.pixelFilter==null||this.serviceDataType!=="esriImageServiceDataTypeVector-UV"&&this.serviceDataType!=="esriImageServiceDataTypeVector-MagDir"||(o.push(new re({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),o.push(new re({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const u=this.rasterInfo.attributeTable&&this.rasterInfo.attributeTable.fields||null;if(u&&u.length>0){const p=u.filter(c=>c.type!=="esriFieldTypeOID"&&c.name.toLowerCase()!=="value").map(c=>{const m=j(c);return m.name=e+c.name,m});o=o.concat(p)}return o}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=w.fromJSON(J(g({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)}readRenderingRule(e,t){const n=t.rasterFunctionInfos;return t.renderingRule||n&&n.length&&n[0].name!=="None"?this._isRFTJson(t.renderingRule)?w.fromJSON({rasterFunctionDefinition:t.renderingRule}):w.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,n){const a=e.toJSON();a.rasterFunctionDefinition?t[n]=a.rasterFunctionDefinition:t[n]=a}readSpatialReference(e,t){const n=e||t.extent.spatialReference;return n?ee.fromJSON(n):null}readPixelType(e){return Pe.fromJSON(e)||e}writePixelType(e,t,n){(ne(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[n]=Pe.toJSON(e))}readVersion(e,t){let n=t.currentVersion;return n||(n=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),n}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let n=e;if(!this._isPicture()&&this.renderer&&this.symbolizer&&!this.pixelFilter){const a=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(this.renderer.toJSON()),o=this._rasterJobHandler.instance,{bandIds:u}=this;if(o){a&&(this.symbolizer.bind(),await o.updateSymbolizer(this.symbolizer,t),this._cachedRendererJson=this.renderer.toJSON());const p=await o.symbolize(g({bandIds:u},e),t);n={extent:e.extent,pixelBlock:p}}else n={extent:e.extent,pixelBlock:this.symbolizer.symbolize(g({bandIds:u},e))}}return n}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputeAngles)throw new E("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=se(Li,e).clone(),Ai(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputePixelLocation)throw new E("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=se(qi,e).clone(),$i(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputeHistograms)throw new E("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=se(tt,e).clone();const{raster:n,mosaicRule:a,renderingRule:o}=this;return o&&e.renderingRule==null&&(e.renderingRule=o),a&&e.mosaicRule==null&&(e.mosaicRule=a),n&&e.raster==null&&(e.raster=n),Ei(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsComputeStatisticsHistograms)throw new E("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=se(tt,e).clone();const{raster:n,mosaicRule:a,renderingRule:o}=this;return o&&e.renderingRule==null&&(e.renderingRule=o),a&&e.mosaicRule==null&&(e.mosaicRule=a),n&&e.raster==null&&(e.raster=n),Ji(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return b(t)?t.get(e):void 0}getFieldDomain(e,t){const n=this.getField(e);return n?n.domain:null}fetchImage(e,t,n,a={}){if(e==null||t==null||n==null)return Promise.reject(new E("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required."));const o=this.renderer||this.symbolizer?this.generateRasterInfo(this.renderingRule,{signal:a.signal}):null;return Pt(o).then(u=>{u&&(this.rasterInfo=u);const p={imageServiceParameters:this.getExportImageServiceParameters(e,t,n,a.timeExtent),imageProps:{extent:e,width:t,height:n,format:this.format},requestAsImageElement:a.requestAsImageElement&&!this.pixelFilter||!1,signal:a.signal};return this._requestArrayBuffer(p)})}fetchKeyProperties(e){return F(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new E("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):F(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>Ce.fromJSON(t.data))}async getCatalogItemRasterInfo(e,t){const n=F(this.parsedUrl.path+"/"+e+"/info",g({query:this._getQueryParams()},t)).then(c=>c.data),a=F(this.parsedUrl.path+"/"+e+"/info/keyProperties",g({query:this._getQueryParams()},t)).then(c=>c.data).catch(()=>{}),o=await Promise.all([n,a]);if(!o[0])return;const u=ye.fromJSON(o[0].extent),p=o[0].statistics?o[0].statistics.map(c=>({min:c[0],max:c[1],avg:c[2],stddev:c[3]})):null;return new Te({bandCount:o[0].bandCount,extent:u,spatialReference:u.sr,pixelSize:new B({x:o[0].pixelSizeX,y:o[0].pixelSizeY,spatialReference:u.sr}),pixelType:o[0].pixelType.toLowerCase(),statistics:p,histograms:o[0].histograms,keyProperties:o[1]||{}})}async getCatalogItemICSInfo(e,t){const{data:n}=await F(this.parsedUrl.path+"/"+e+"/info/ics",g({query:this._getQueryParams()},t)),a=n&&n.ics;if(!a)return;let o=null;try{o=(await F(this.parsedUrl.path+"/"+e+"/info",g({query:this._getQueryParams()},t))).data.extent}catch{}if(!o||!o.spatialReference)return{ics:a,icsToPixelTransform:null,icsExtent:null,northDirection:null};const u=this.version>=10.7?F(this.parsedUrl.path+"/"+e+"/info/icstopixel",g({query:this._getQueryParams()},t)).then(x=>x.data).catch(()=>({})):{},p=o.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[o]}),inSR:p.wkid||JSON.stringify(p),outSR:"0:"+e},m=F(this.parsedUrl.path+"/project",g({query:this._getQueryParams(c)},t)).then(x=>x.data).catch(()=>({})),y=5,R=(o.xmin+o.xmax)/2,f=(o.ymax-o.ymin)/(y+1),v=o.ymin+f,d=[];for(let x=0;x<y;x++)d.push({x:R,y:v+f*x});const h={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:d}),inSR:p.wkid||JSON.stringify(p),outSR:"0:"+e},I=F(this.parsedUrl.path+"/project",g({query:this._getQueryParams(h)},t)).then(x=>x.data).catch(()=>({})),S=await Promise.all([u,m,I]);let C=S[0].ipxf;if(C==null){var N,_,Q;const x=(N=a.geodataXform)==null?void 0:N.xf_0;(x==null||(_=x.name)==null?void 0:_.toLowerCase())==="topup"&&(x==null||(Q=x.coefficients)==null?void 0:Q.length)===6&&(C={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:x.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const K=ye.fromJSON(S[1]&&S[1].geometries&&S[1].geometries[0]);K&&(K.spatialReference=new ee({wkid:0,imageCoordinateSystem:a}));const $=S[2].geometries?S[2].geometries.filter(x=>x!=null&&x.x!=null&&x.y!=null&&x.x!=="NaN"&&x.y!=="NaN"):[],le=$.length;if(le<3)return{ics:a,icsToPixelTransform:C,icsExtent:K,northDirection:null};let ue=0,pe=0,ie=0,X=0;for(let x=0;x<le;x++)ue+=$[x].x,pe+=$[x].y,ie+=$[x].x*$[x].x,X+=$[x].x*$[x].y;const Y=(le*X-ue*pe)/(le*ie-ue*ue);let he=0;const Qe=$[y-1].x>$[0].x,Ge=$[y-1].y>$[0].y;return Y===1/0?he=Ge?90:270:Y===0?he=Qe?0:180:Y>0?he=Qe?180*Math.atan(Y)/Math.PI:180*Math.atan(Y)/Math.PI+180:Y<0&&(he=Ge?180+180*Math.atan(Y)/Math.PI:360+180*Math.atan(Y)/Math.PI),{ics:a,icsToPixelTransform:C,icsExtent:K,northDirection:he}}async generateRasterInfo(e,t){var n;if((!e||(e==null||(n=e.functionName)==null?void 0:n.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e))&&b(this.serviceRasterInfo))return this.serviceRasterInfo;const a=Qi(e);if(this._functionRasterInfos[a])return this._functionRasterInfos[a];const o=this._generateRasterInfo(e,t);this._functionRasterInfos[a]=o;try{return await o}catch{return this._functionRasterInfos[a]=null,null}}getExportImageServiceParameters(e,t,n,a){var o;e=e.clone().shiftCentralMeridian();const u=ht(e.spatialReference,this.parsedUrl.path);b(this.serviceRasterInfo)&&this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:c,noData:m}=p;let{renderingRule:y}=p;const R=(o=this.renderingRule)==null?void 0:o.rasterFunctionDefinition,f=!this.renderer||this.renderer.type==="raster-stretch";if(c!=null&&c.length&&this._hasRenderingRule(this.renderingRule)&&!R&&f){const h={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:c}};if(y.rasterFunction==="Stretch")h.rasterFunctionArguments.Raster=y.rasterFunctionArguments.Raster,y.rasterFunctionArguments.Raster=h;else if(y.rasterFunction==="Colormap"){const I=y.rasterFunctionArguments.Raster;(I==null?void 0:I.rasterFunction)==="Stretch"?(h.rasterFunctionArguments.Raster=I.rasterFunctionArguments.Raster,I.rasterFunctionArguments.Raster=h):(h.rasterFunctionArguments.Raster=I,y.rasterFunctionArguments.Raster=h)}else h.rasterFunctionArguments.Raster=y,y=h;p.bandIds=void 0}else p.bandIds=c==null?void 0:c.join(",");m instanceof Array&&m.length>0&&(p.noData=m.join(","));const v=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,a):null;p.mosaicRule=v&&JSON.stringify(v),p.renderingRule=this._getRenderingRuleString(w.fromJSON(y));const d={};if(a){const{start:h,end:I}=a.toJSON();h&&I&&h===I?d.time=""+h:h==null&&I==null||(d.time=`${h==null?"null":h},${I==null?"null":I}`)}return g(g({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+n},p),d)}async getSamples(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsGetSamples)throw new E("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=se(Ui,e).clone();const{raster:n}=this;return n&&e.raster==null&&(e.raster=n),zi(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(await this._fetchCapabilities(t==null?void 0:t.signal),!this.capabilities.operations.supportsIdentify)throw new E("imagery-layer:query-rasters","query operation is not supported on the input image service");e=se(it,e).clone();const{raster:n,mosaicRule:a,renderingRule:o}=this;if(o&&e.renderingRule==null&&(e.renderingRule=o),a&&e.mosaicRule==null){const u=this._combineMosaicRuleWithTimeExtent(a,e.timeExtent);e.mosaicRule=Ct(u)}return n&&e.raster==null&&(e.raster=n),et(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new Ne;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Ot(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),_t(this.url,e,t)}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Vt(this.url,e,t)}async queryVisibleRasters(e,t){if(!e)throw new E("imagery-layer: query-visible-rasters","missing query parameter");const{pixelSize:n,returnDomainValues:a,returnTopmostRaster:o,showNoDataRecords:u}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let p=!1,c=null,m=null;const y="raster.servicepixelvalue",R=this.rasterFunctionNamesIndex;if(b(e.outFields)&&(p=e.outFields.some(N=>N.toLowerCase().indexOf(y)===-1),this.version>=10.4)){const N=e.outFields.filter(_=>_.toLowerCase().indexOf(y)>-1&&_.length>y.length).map(_=>{const Q=_.slice(y.length+1);return[this._updateRenderingRulesFunctionName(Q,R),Q]});c=N.map(_=>new w({functionName:_[0]})),m=N.map(_=>_[1]),c.length===0?this.renderingRule?(c.push(this.renderingRule),m.push(this.renderingRule.functionName)):c=null:this.renderingRule&&!c.some(_=>_.functionName===this.renderingRule.functionName)&&(c.push(this.renderingRule),m.push(this.renderingRule.functionName))}const f=ne(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),v=e.timeExtent||this.timeExtent,d=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,v),h=this._getQueryParams({geometry:e.geometry,timeExtent:v,mosaicRule:d,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:c,pixelSize:n,returnCatalogItems:p,returnGeometry:f,raster:this.raster,maxItemCount:o?1:null});delete h.f;const I=new it(h);try{var S,C;await this.generateRasterInfo(this.renderingRule);const N=await et(this.url,I,{signal:t==null?void 0:t.signal,query:g({},this.customParameters)}),_=e.outFields,Q=N.value.toLowerCase().indexOf("nodata")>-1;if(!(p&&!f&&(N==null||(S=N.catalogItems)==null?void 0:S.features.length)&&(u||!Q)))return this._processVisibleRastersResponse(N,{returnDomainValues:a,templateRRFunctionNames:m,showNoDataRecords:u,templateFields:_});const K=this.objectIdField||"ObjectId",$=N.catalogItems.features,le=$.map(ie=>{var X;return(X=ie.attributes)==null?void 0:X[K]}),ue=new Ne({objectIds:le,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[K]}),pe=await this.queryRasters(ue);return pe!=null&&(C=pe.features)!=null&&C.length&&pe.features.forEach(ie=>{$.forEach(X=>{X.attributes[K]===ie.attributes[K]&&(X.geometry=new jt(ie.geometry),b(e.outSpatialReference)&&(X.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(N,{returnDomainValues:a,templateRRFunctionNames:m,showNoDataRecords:u,templateFields:_})}catch{throw new E("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const n=F(this.parsedUrl.path+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(u=>{var p;return(p=u.data)==null?void 0:p.statistics}),a=F(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(u=>{var p;return(p=u.data)==null?void 0:p.histograms}),o=await Promise.all([n,a]);return o[0]&&o[0].forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:o[0]||null,histograms:o[1]||null}}async createStreamlinesMesh(e,t){const n=this._rasterJobHandler.instance;return n?n.createStreamlinesMesh(e,t):ci(e.rendererSettings,e.flowData,b(t.signal)?t.signal:new AbortController().signal)}async _fetchService(e){await this._fetchServiceInfo(e),b(this.serviceRasterInfo)&&!this.rasterInfo&&(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,n=b(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):this._fetchAuxiliaryRasterInfo({serviceInfo:t,signal:e}).then(u=>(this._set("serviceRasterInfo",u),u)),a=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,o=this._getRasterFunctionInfos();return Promise.all([n,a,o]).then(u=>{u[1]?this._set("rasterInfo",u[1]):this._set("rasterInfo",u[0]),u[2]&&this._set("rasterFunctionInfos",u[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),rt.warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.watch("renderingRule",c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(c).then(m=>{m&&(this.rasterInfo=m)})});const p=b(this.serviceRasterInfo)&&this.serviceRasterInfo.multidimensionalInfo;p&&this._updateMultidimensionalDefinition(p)})}_combineMosaicRuleWithTimeExtent(e,t){const n=this.timeInfo;if(ne(e)||ne(this.multidimensionalInfo)||ne(t)||ne(n==null?void 0:n.startField))return e;const{startField:a}=n;var o;if(e=e.clone(),this._serviceSourceType==="mosaic-dataset")return e.multidimensionalDefinition=(o=e.multidimensionalDefinition)==null?void 0:o.filter(f=>f.dimensionName!==a),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const u=e.multidimensionalDefinition.filter(f=>f.dimensionName===a),p=b(t.start)?t.start.getTime():null,c=b(t.end)?t.end.getTime():null,m=p==null||c==null||p===c,y=m?[p||c]:[[p,c]],R=this.version>=10.8;if(u.length)u.forEach(f=>{f.dimensionName===a&&(R?(f.dimensionName=null,f.isSlice=null,f.values=null):(f.isSlice=m,f.values=y))});else if(!R){const f=e.multidimensionalDefinition.filter(v=>v.variableName!=null&&v.dimensionName==null);f.length?f.forEach(v=>{v.dimensionName=a,v.isSlice=m,v.values=y}):e.multidimensionalDefinition.push(new Oe({variableName:"",dimensionName:a,isSlice:m,values:y}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return ne(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this._serviceSourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){var n;if(await this._fetchCapabilities((n=t)==null?void 0:n.signal),!this.capabilities.operations.supportsQuery)throw new E("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=b(e)?se(Ne,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query=J(g({},t.query),{raster:this.raster})),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new li;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>null),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:n}=this;return e.type==="unique-value"&&this._hasRenderingRule(n)&&t.bandCount===1&&["u8","s8"].includes(t.pixelType)||ni(this.rasterInfo).includes(this.renderer.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var t;let n=this.sourceJSON;if(!n){const{data:a,ssl:o}=await F(this.parsedUrl.path,{query:this._getQueryParams(),signal:e});n=a,this.sourceJSON=n,o&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((t=n.capabilities)==null?void 0:t.toLowerCase().split(",").map(a=>a.trim()).indexOf("tilesonly"))>-1)throw new E("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(n,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var t;if(!e)return!1;const n=this._isMosaicDataset(e),a=e.currentVersion>=10.71&&e.hasMultidimensions&&e.timeInfo&&!(e.objectIdField&&((t=e.fields)==null?void 0:t.length)>1);return n||a}_isVectorFieldResampleFunction(e){if(!b(e))return!1;const{functionName:t,functionArguments:n}=e,a=(t==null?void 0:t.toLowerCase())==="resample",o=(n==null?void 0:n.ResampleType)||(n==null?void 0:n.resampleType);return a&&(o===7||o===10)}_isPicture(){return!this.format||this.format.indexOf("jpg")>-1||this.format.indexOf("png")>-1}_configRenderer(e){if(!this._isPicture()&&!this.pixelFilter){if(!this.bandIds&&this.rasterInfo.bandCount>=3){const o=si(this.rasterInfo);!o||this.rasterInfo.bandCount===3&&o[0]===0&&o[1]===1&&o[2]===2||(this.bandIds=o)}var t,n;e||(e=ai(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:(t=this.mosaicRule)==null||(n=t.multidimensionalDefinition)==null?void 0:n[0].variableName}));const a=oi(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=a,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new mi({rendererJSON:a,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:b(e.pixelBlock)&&e.pixelBlock.clone()}}_getQueryParams(e){b(e==null?void 0:e.renderingRule)&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:n}=this;return g(g({raster:t,viewId:n,f:"json"},e),this.customParameters)}_getRequestOptions(e){return J(g({},e),{query:g(g({},e==null?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,n){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Ke(e,t,n)}async _fetchMultidimensionalInfo(e){var t;const n=await F(this.parsedUrl.path+"/multidimensionalInfo",{query:this._getQueryParams(),signal:e}).then(a=>{var o;return(o=a.data)==null?void 0:o.multidimensionalInfo});return(t=n.variables)!=null&&t.length&&n.variables.forEach(a=>{var o;(o=a.statistics)!=null&&o.length&&a.statistics.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation})}),n}async _getRasterFunctionInfos(e){const t=this.sourceJSON.rasterFunctionInfos;if(this.serviceRasterInfo)return t;if(t&&this.version>=10.3){var n;return t.length===1&&t[0].name.toLowerCase()==="none"?t:(n=(await F(this.parsedUrl.path+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:n.rasterFunctionInfos}return null}async _fetchAuxiliaryRasterInfo(e){const t=e&&e.serviceInfo;if(!t)return Promise.reject(new E("imagery-layer:fetch-metadata","valid serviceInfo is required"));const n=e.signal,a=!!(t.hasRasterAttributeTable&&this.version>=10.1)&&F(this.parsedUrl.path+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.1?e==null?void 0:e.renderingRule:null}),signal:n}).then(d=>Ce.fromJSON(d.data)).catch(()=>null),o=!!(t.hasColormap&&this.version>=10.1)&&F(this.parsedUrl.path+"/colormap",{query:this._getQueryParams({renderingRule:this.version>=10.6?e==null?void 0:e.renderingRule:null}),signal:n}).then(d=>{var h;return(h=d.data)==null?void 0:h.colormap}),u=!!(t.hasHistograms&&this.version>=10.1)&&F(this.parsedUrl.path+"/histograms",{query:this._getQueryParams({renderingRule:this.version>=10.1?e==null?void 0:e.renderingRule:null}),signal:n}).then(d=>{var h;return(h=d.data)==null?void 0:h.histograms}),p=this.version>=10.3&&F(this.parsedUrl.path+"/keyProperties",{query:this._getQueryParams({renderingRule:e==null?void 0:e.renderingRule}),signal:n}).then(d=>d.data).catch(()=>{}),c=!!(t.hasMultidimensions&&this.version>=10.3)&&this._fetchMultidimensionalInfo(),m=await Promise.all([a,o,u,p,c]);let y=null;if(t.minValues&&t.minValues.length===t.bandCount){y=[];for(let d=0;d<t.minValues.length;d++)y.push({min:t.minValues[d],max:t.maxValues[d],avg:t.meanValues[d],stddev:t.stdvValues[d]})}const R=Math.ceil((t.extent.xmax-t.extent.xmin)/t.pixelSizeX-.1),f=Math.ceil((t.extent.ymax-t.extent.ymin)/t.pixelSizeY-.1),v=ee.fromJSON(t.spatialReference||t.extent.spatialReference);return new Te({width:R,height:f,bandCount:t.bandCount,extent:ye.fromJSON(t.extent),spatialReference:v,pixelSize:new B({x:t.pixelSizeX,y:t.pixelSizeY,spatialReference:v}),pixelType:t.pixelType.toLowerCase(),statistics:y,attributeTable:m[0]||null,colormap:m[1]||null,histograms:m[2]||null,keyProperties:m[3]||{},multidimensionalInfo:m[4]||null})}async _requestArrayBuffer(e){var t;const{imageProps:n,requestAsImageElement:a,signal:o}=e;if(a&&!this.pixelFilter&&((t=n.format)==null?void 0:t.indexOf("png"))>-1)return{imageElement:(await F(this.parsedUrl.path+"/exportImage",{responseType:"image",query:this._getQueryParams(g({f:"image"},e.imageServiceParameters)),signal:o})).data,params:n};const u=this._initJobHandler(),p=F(this.parsedUrl.path+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(g({f:"image"},e.imageServiceParameters)),signal:o}),c=(await Promise.all([p,u]))[0].data,m=n.format||"jpgpng";let y=m;if(y!=="bsq"&&y!=="bip"&&(y=di(c)),!y)throw new E("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const R={signal:o};return{pixelData:{pixelBlock:await(m==="gif"||m==="bmp"||m.indexOf("png")>-1&&(y==="png"||y==="jpg")?Ke(c,g({useCanvas:!0},n),R):this._decodePixelBlock(c,{width:n.width,height:n.height,planes:null,pixelType:null,noDataValue:null,format:m},R)),extent:n.extent},params:n}}async _generateRasterInfo(e,t){const{data:n}=await F(this.parsedUrl.path,g({query:this._getQueryParams({renderingRule:e})},t));return await this._fetchAuxiliaryRasterInfo(g({serviceInfo:n,renderingRule:e},t))}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this._defaultServiceMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=e.variables[0].dimensions,n="",a=[];for(const o in t)if(t.hasOwnProperty(o)){const u=t[o],p=u.extent;let c=!0,m=[p[0]];u.hasRanges&&u.hasRanges===!0?(c=!1,m=[u.values[0]]):u.name.toLowerCase()==="stdz"&&Math.abs(p[1])<=Math.abs(p[0])&&(m=[p[1]]),a.push(new Oe({variableName:n,dimensionName:t[o].name,isSlice:c,values:m}))}if(a.length>0){this.mosaicRule=this.mosaicRule||new H;const o=this.mosaicRule.multidimensionalDefinition;(!o||o&&o.length<=0)&&(this.mosaicRule.multidimensionalDefinition=a)}}_formatAttributeValue(e,t){if(typeof e=="string"){const n=this.popupTemplate&&this.popupTemplate.fieldInfos,a=this._getFieldInfo(n,t),o=a&&a.format;if(o){let u,p;return e.trim().indexOf(",")>-1?(u=",",p=u+" ",this._formatDelimitedString(e,u,p,o)):e.trim().indexOf(";")>-1?(u=";",p=u+" ",this._formatDelimitedString(e,u,p,o)):e.trim().indexOf(" ")>-1?(u=p=" ",this._formatDelimitedString(e,u,p,o)):this._formatNumberFromString(e,o)}}return e}_getFieldInfo(e,t){if(!e||!e.length||!t)return;const n=t.toLowerCase();let a;return e.some(o=>!(!o.fieldName||o.fieldName.toLowerCase()!==n&&o.fieldName.toLowerCase()!==n.replace(/ /g,"_"))&&(a=o,!0)),a}_formatDelimitedString(e,t,n,a){return e&&t&&n&&a?e.trim().split(t).map(o=>this._formatNumberFromString(o,a)).join(n):e}_formatNumberFromString(e,t){if(!e||!t)return e;const n=Number(e);return isNaN(n)?e:t.format(n)}_processVisibleRastersResponse(e,t){t=t||{};const n=e.value,{templateRRFunctionNames:a,showNoDataRecords:o,returnDomainValues:u,templateFields:p}=t,c=e.processedValues;let m=e.catalogItems&&e.catalogItems.features,y=e.properties&&e.properties.Values&&e.properties.Values.map(S=>S.replace(/ /gi,", "))||[];const R=this.objectIdField||"ObjectId",f=typeof n=="string"&&n.toLowerCase().indexOf("nodata")>-1,v=[];if(n&&!m&&!f){const S={};S[R]=0,y=[n],m=[new Mt(this.fullExtent,null,S)]}if(!m)return[];let d,h,I;this._updateResponseFieldNames(m,p),f&&!o&&(m=[]);for(let S=0;S<m.length;S++){if(d=m[S],n!=null){if(h=y[S],I=this.renderingRule&&c&&c.length>0&&a&&a.length>0&&a.indexOf(this.renderingRule.functionName)>-1?c[a.indexOf(this.renderingRule.functionName)]:n,h.toLowerCase()==="nodata"&&!o)continue;const C="Raster.ItemPixelValue",N="Raster.ServicePixelValue";d.attributes[C]=this._formatAttributeValue(h,C),d.attributes[N]=this._formatAttributeValue(I,N),this._updateFeatureWithMagDirValues(d,h);const _=this.fields&&this.fields.length>0;let Q=this.renderingRule&&b(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable?_?h:n:I;this.renderingRule||(Q=_?h:n),this._updateFeatureWithRasterAttributeTableValues(d,Q)}if(d.sourceLayer=d.layer=this,u&&this._updateFeatureWithDomainValues(d),a&&c&&a.length===c.length)for(let C=0;C<a.length;C++){const N="Raster.ServicePixelValue."+a[C];d.attributes[N]=this._formatAttributeValue(c[C],N)}v.push(m[S])}return v}_updateFeatureWithRasterAttributeTableValues(e,t){const n=this.rasterInfo&&this.rasterInfo.attributeTable||b(this.serviceRasterInfo)&&this.serviceRasterInfo.attributeTable,a=n&&n.features;if(!a)return;const o=n.fields,u=o.map(m=>m.name).filter(m=>m.toLowerCase()==="value"),p=u&&u[0];if(!p)return;const c=a.filter(m=>m.attributes[p]===(t!=null?parseInt(t,10):null));c&&c[0]&&o.forEach(m=>{const y=this.rasterAttributeTableFieldPrefix+m.name;e.attributes[y]=this._formatAttributeValue(c[0].attributes[m.name],y)})}_updateFeatureWithMagDirValues(e,t){if(this.serviceDataType!=="esriImageServiceDataTypeVector-UV"&&this.serviceDataType!=="esriImageServiceDataTypeVector-MagDir")return;const n=t.split(/,\s*/).map(c=>parseFloat(c)),a=n.map(c=>[c]),o=n.map(c=>({minValue:c,maxValue:c,noDataValue:null})),u=new yi({height:1,width:1,pixelType:"f32",pixels:a,statistics:o});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:u,extent:new ye(0,0,0,0,this.spatialReference)});const p=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[u.pixels[0][0],u.pixels[1][0]]:hi([u.pixels[0][0],u.pixels[1][0]]);e.attributes["Raster.Magnitude"]=p[0],e.attributes["Raster.Direction"]=p[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(n=>n.domain&&n.domain.type==="coded-value");t!=null&&t.forEach(n=>{const a=e.attributes[n.name];if(a!=null){const o=n.domain.codedValues.find(u=>u.code===a);o&&(e.attributes[n.name]=o.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const n=this.fieldsIndex;b(n)&&e.forEach(a=>{if(a&&a.attributes){for(const o of t)if(n.has(o)){const u=n.get(o).name;u!==o&&(a.attributes[o]=a.attributes[u],delete a.attributes[u])}}})}_getRenderingRuleString(e){if(this._hasRenderingRule(e)){var t;let n=e.toJSON();return n=(t=n.rasterFunctionDefinition)!=null?t:n,(n.thumbnail||n.thumbnailEx)&&(n.thumbnail=n.thumbnailEx=null),JSON.stringify(n)}return null}_hasRenderingRule(e){return e&&e.functionName&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const n=e.toLowerCase().replace(/ /gi,"_");return t.has(n)?t.get(n):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(y=>y.trim()):["image","catalog"],{currentVersion:n,advancedQueryCapabilities:a,maxRecordCount:o}=e,u=t.indexOf("image")>-1,p=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!!(e.spatialReference||e.extent&&e.extent.spatialReference),m=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:u,supportsExportImage:u,supportsIdentify:u,supportsMeasure:t.indexOf("mensuration")>-1&&c,supportsDownload:t.indexOf("download")>-1,supportsQuery:t.indexOf("catalog")>-1&&e.fields&&e.fields.length>0,supportsGetSamples:n>=10.2&&u,supportsProject:n>=10.3&&u,supportsComputeStatisticsHistograms:n>=10.4&&u,supportsQueryBoundary:n>=10.6&&u,supportsCalculateVolume:n>=10.7&&p,supportsComputePixelLocation:n>=10.7&&t.indexOf("catalog")>-1,supportsComputeAngles:n>=10.91,supportsAdd:m,supportsDelete:m,supportsEditing:m,supportsUpdate:m,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1},query:{maxRecordCount:o,maxRecordCountFactor:void 0,supportsStatistics:!(a==null||!a.supportsStatistics),supportsOrderBy:!(a==null||!a.supportsOrderBy),supportsDistinct:!(a==null||!a.supportsDistinct),supportsPagination:!(a==null||!a.supportsPagination),supportsStandardizedQueriesOnly:!(a==null||!a.useStandardizedQueries),supportsPercentileStatistics:!(a==null||!a.supportsPercentileStatistics),supportsCentroid:!(a==null||!a.supportsReturningGeometryCentroid),supportsDistance:!(a==null||!a.supportsQueryWithDistance),supportsExtent:!(a==null||!a.supportsReturningQueryExtent),supportsGeometryProperties:!(a==null||!a.supportsReturningGeometryProperties),supportsHavingClause:!(a==null||!a.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!(a==null||!a.supportsDefaultSR),supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};return s([l()],i.prototype,"_functionRasterInfos",void 0),s([l()],i.prototype,"_rasterJobHandler",void 0),s([l({dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"_defaultServiceMosaicRule",void 0),s([O("_defaultServiceMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultServiceMosaicRule",null),s([l()],i.prototype,"_cachedRendererJson",void 0),s([l({readOnly:!0})],i.prototype,"_serviceSourceType",void 0),s([O("_serviceSourceType",["serviceSourceType","fields"])],i.prototype,"readServiceSourceType",null),s([l({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),s([O("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),s([l()],i.prototype,"rasterAttributeTableFieldPrefix",void 0),s([l({readOnly:!0})],i.prototype,"rasterFunctionNamesIndex",null),s([l()],i.prototype,"adjustAspectRatio",void 0),s([l({readOnly:!0}),U("serviceRasterInfo.bandCount")],i.prototype,"bandCount",void 0),s([l({type:[de],json:{write:!0}})],i.prototype,"bandIds",void 0),s([O("bandIds")],i.prototype,"readBandIds",null),s([l({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),s([O("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),s([l({type:Number})],i.prototype,"compressionQuality",void 0),s([P("compressionQuality")],i.prototype,"writeCompressionQuality",null),s([l({type:Number})],i.prototype,"compressionTolerance",void 0),s([P("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),s([l({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),s([l({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),s([l({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),s([l()],i.prototype,"rasterInfo",void 0),s([l({readOnly:!0,type:[re]})],i.prototype,"fields",void 0),s([l({readOnly:!0})],i.prototype,"fieldsIndex",null),s([l({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),s([O("service","format",["serviceDataType"])],i.prototype,"readFormat",null),s([l({type:ye})],i.prototype,"fullExtent",void 0),s([l({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),s([l({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),s([l({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),s([l({type:String,json:{type:te.jsonValues,read:te.read,write:te.write}})],i.prototype,"interpolation",void 0),s([l()],i.prototype,"minScale",void 0),s([O("service","minScale")],i.prototype,"readMinScale",null),s([l()],i.prototype,"maxScale",void 0),s([O("service","maxScale")],i.prototype,"readMaxScale",null),s([l({type:H})],i.prototype,"mosaicRule",null),s([O("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),s([P("mosaicRule")],i.prototype,"writeMosaicRule",null),s([l({readOnly:!0}),U("serviceRasterInfo.multidimensionalInfo")],i.prototype,"multidimensionalInfo",void 0),s([l({json:{type:de}})],i.prototype,"noData",void 0),s([P("noData")],i.prototype,"writeNoData",null),s([l({type:String,json:{type:ge.jsonValues,read:ge.read,write:ge.write}})],i.prototype,"noDataInterpretation",void 0),s([l({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),s([O("objectIdField")],i.prototype,"readObjectIdField",null),s([l({})],i.prototype,"geometryType",void 0),s([l({})],i.prototype,"typeIdField",void 0),s([l({})],i.prototype,"types",void 0),s([l({readOnly:!0})],i.prototype,"parsedUrl",null),s([l({readOnly:!0}),U("serviceRasterInfo.pixelSize.x")],i.prototype,"pixelSizeX",void 0),s([l({readOnly:!0}),U("serviceRasterInfo.pixelSize.y")],i.prototype,"pixelSizeY",void 0),s([l({type:Function})],i.prototype,"pixelFilter",void 0),s([l()],i.prototype,"raster",void 0),s([l()],i.prototype,"viewId",void 0),s([l({types:ti,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:ii,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"renderer",null),s([O("renderer")],i.prototype,"readRenderer",null),s([P("renderer")],i.prototype,"writeRenderer",null),s([l()],i.prototype,"symbolizer",void 0),s([l(Ft)],i.prototype,"opacity",void 0),s([l({readOnly:!0}),U("serviceRasterInfo.attributeTable")],i.prototype,"rasterAttributeTable",void 0),s([l({readOnly:!0})],i.prototype,"rasterFields",null),s([l({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),s([l({type:w})],i.prototype,"renderingRule",null),s([O("renderingRule",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRenderingRule",null),s([P("renderingRule")],i.prototype,"writeRenderingRule",null),s([l()],i.prototype,"serviceDataType",void 0),s([l({readOnly:!0,type:ee})],i.prototype,"spatialReference",void 0),s([O("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),s([l({json:{type:Pe.jsonValues}})],i.prototype,"pixelType",void 0),s([O("pixelType")],i.prototype,"readPixelType",null),s([P("pixelType")],i.prototype,"writePixelType",null),s([l({constructOnly:!0,type:Te})],i.prototype,"serviceRasterInfo",void 0),s([l()],i.prototype,"sourceJSON",void 0),s([l(Nt)],i.prototype,"url",void 0),s([l({readOnly:!0})],i.prototype,"version",void 0),s([O("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=s([A("esri.layers.mixins.ArcGISImageService")],i),i};let q=class extends Jt(Et(zt(Lt(qt(Ut(Gi(Ht(kt(Qt(Gt)))))))))){constructor(...r){super(...r),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(r,i){return typeof r=="string"?g({url:r},i):r}load(r){const i=b(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},r).catch(Bt).then(()=>this._fetchService(i))),Promise.resolve(this)}writeOperationalLayerType(r,i,e){var t;const n=((t=this.renderer)==null?void 0:t.type)==="vector-field";i[e]=n?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(r){const i=this.rasterFields,e=this.title,t=new Set;let n=!1,a=!1;this.capabilities&&(n=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,a=n&&(this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"));const o=new Set;n&&(o.add("raster.itempixelvalue"),a&&o.add("raster.magnitude").add("raster.direction"));for(const u of i){const p=u.name.toLowerCase();o.has(p)||p.indexOf("raster.servicepixelvalue.")>-1||t.add(u.name)}return Wt({fields:i,title:e},J(g({},r),{visibleFieldNames:t}))}queryFeatures(r,i){return this.queryRasters(r,i).then(e=>{if(e!=null&&e.features)for(const t of e.features)t.layer=t.sourceLayer=this;return e})}queryFeatureCount(r,i){return this.queryRasterCount(r,i)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(r){return Kt(this,r)}};s([l(Xt)],q.prototype,"legendEnabled",void 0),s([l({type:["show","hide"]})],q.prototype,"listMode",void 0),s([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],q.prototype,"isReference",void 0),s([l({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],q.prototype,"operationalLayerType",void 0),s([P("web-map","operationalLayerType")],q.prototype,"writeOperationalLayerType",null),s([l(Zt)],q.prototype,"popupEnabled",void 0),s([l({type:Yt,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],q.prototype,"popupTemplate",void 0),s([l({readOnly:!0})],q.prototype,"defaultPopupTemplate",null),s([l({readOnly:!0,json:{read:!1}})],q.prototype,"type",void 0),q=s([A("esri.layers.ImageryLayer")],q);const er=q;export{er as default};
