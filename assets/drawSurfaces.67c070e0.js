var ue=Object.defineProperty,ge=Object.defineProperties;var me=Object.getOwnPropertyDescriptors;var L=Object.getOwnPropertySymbols;var ye=Object.prototype.hasOwnProperty,ve=Object.prototype.propertyIsEnumerable;var A=(e,t,i)=>t in e?ue(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,C=(e,t)=>{for(var i in t||(t={}))ye.call(t,i)&&A(e,i,t[i]);if(L)for(var i of L(t))ve.call(t,i)&&A(e,i,t[i]);return e},R=(e,t)=>ge(e,me(t));import{j as P,O as l,c5 as j,c6 as xe,c7 as fe,aM as b,c8 as N,c9 as E,bi as _e,ca as we,cb as Te,cc as Se,cd as Ve,ce as Me,cf as be,cg as B,ch as H,ci as Oe,cj as ie,ck as ae,cl as Ce,bZ as Re,c1 as ke,cm as re,cn as Ie,H as Pe,V as f,co as Ge,cp as De,cq as He,cr as $e,cs as Ee,ap as U,ct as ze,h as Fe,Z as G,g as We,ac as Ze,br as Ue,J as h,K as u,L as se,cu as q,cv as k,b2 as ne,aQ as oe,cw as pe,cx as W,$ as Le,cy as Ae,b3 as je,cz as z,cA as Ne,cB as Q,cC as le,cD as ce,cE as Be}from"./vendor.c28ea743.js";import{x as qe,S as Qe,g as Je,p as Ke}from"./EditGeometryOperations.589e5ad2.js";import{e as Z}from"./SnappingContext.cefda3df.js";function D(e,t,i=null){return l(i)?[e,t,i]:[e,t]}function g(e,t,i=null){return l(i)?{x:e,y:t,z:i}:{x:e,y:t}}class he{constructor(t){this.spatialReference=t}mapToLocalMultiple(t){return H(t.map(i=>this.mapToLocal(i)))}get doUnnormalization(){return!1}}class Xe extends he{constructor(t,i,a=null){super(i),this.defaultZ=a,this.transform=j(),this.transformInv=j(),this.transform=xe(t),fe(this.transformInv,this.transform)}makeMapPoint(t,i){return D(t,i,this.defaultZ)}mapToLocal(t){return g(this.transform[0]*t[0]+this.transform[2]*t[1]+this.transform[4],this.transform[1]*t[0]+this.transform[3]*t[1]+this.transform[5])}localToMap(t){return D(this.transformInv[0]*t.x+this.transformInv[2]*t.y+this.transformInv[4],this.transformInv[1]*t.x+this.transformInv[3]*t.y+this.transformInv[5],this.defaultZ)}}class Ye extends he{constructor(t,i){super(t.spatialReference),this.view=t,this.defaultZ=null,this.pWS=b(),this.tangentFrameUpWS=b(),this.tangentFrameRightWS=b(),this.tangentFrameForwardWS=b(),this.localFrameRightWS=b(),this.localFrameUpWS=b(),this.worldToLocalTransform=N(),this.localToWorldTransform=N(),this.scale=1,this.scale=t.resolution,this.referenceMapPoint=i,this.defaultZ=i.hasZ?i.z:null;const a=t.state.camera.viewRight;this.view.renderCoordsHelper.toRenderCoords(this.referenceMapPoint,this.pWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,E.X,this.tangentFrameRightWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,E.Y,this.tangentFrameUpWS),this.view.renderCoordsHelper.worldBasisAtPosition(this.pWS,E.Z,this.tangentFrameForwardWS);const n=b();_e(n,this.tangentFrameForwardWS,we(a,this.tangentFrameForwardWS)),Te(this.localFrameRightWS,a,n),Se(this.localFrameRightWS,this.localFrameRightWS),Ve(this.localFrameUpWS,this.tangentFrameForwardWS,this.localFrameRightWS),Me(this.worldToLocalTransform,this.localFrameRightWS,this.tangentFrameRightWS),be(this.localToWorldTransform,this.worldToLocalTransform)}get doUnnormalization(){return this.view.viewingMode==="global"}makeMapPoint(t,i){return D(t,i,this.defaultZ)}mapToLocal(t){const i=b();this.view.renderCoordsHelper.toRenderCoords(new P({x:t[0],y:t[1],spatialReference:this.spatialReference}),i),B(i,i,this.worldToLocalTransform);const a=this.view.renderCoordsHelper.fromRenderCoords(i,this.view.spatialReference);return l(a)?g(a.x/this.scale,a.y/this.scale):null}localToMap(t){const i=b();this.view.renderCoordsHelper.toRenderCoords(new P({x:t.x*this.scale,y:t.y*this.scale,spatialReference:this.spatialReference}),i),B(i,i,this.localToWorldTransform);const a=this.view.renderCoordsHelper.fromRenderCoords(i,this.view.spatialReference);return l(a)?D(a.x,a.y,this.defaultZ):null}}function J(e,t){if(e.type==="2d")return new Xe(e.state.transform,e.spatialReference,t.length>2?t[2]:null);if(e.type==="3d"){const i=t.length>2?new P({x:t[0],y:t[1],z:t[2],spatialReference:e.spatialReference}):new P({x:t[0],y:t[1],spatialReference:e.spatialReference});return new Ye(e,i)}return null}function K(e,t){const i=new P({x:e[0],y:e[1],spatialReference:t});return e.length>2&&(i.z=e[2]),i}function et(e,t){return new Re({points:e,spatialReference:t})}function X(e,t,i){const a=new ke({paths:e,spatialReference:t});return i&&ie(a),a}function I(e,t,i,a=!0){const n=re(e);n.forEach(s=>{const p=s[0],c=s[s.length-1];Ie(p,c)&&s.length!==1||s.push(s[0])});let r=new Pe({rings:n,spatialReference:t});return r.rings.forEach(s=>{Oe(s,!1,!1)||s.reverse()}),i&&ie(r),a&&r.isSelfIntersecting&&ae(t)&&(r=Ce(r)),r}function Y(e,t,i){const a=t.mapToLocalMultiple(e),n=[],r={x:a[0].x,y:a[0].y},s={x:a[1].x,y:a[1].y},p=Math.round(s.x-r.x),c=Math.round(s.y-r.y),o=Math.max(Math.abs(p),Math.abs(c));if(i){const d={x:r.x+o,y:r.y+o},v={x:r.x-o,y:r.y-o};n.push(g(d.x,v.y),g(v.x,v.y),g(v.x,d.y),g(d.x,d.y))}else{const d={x:p>0?r.x+o:r.x-o,y:c>0?r.y+o:r.y-o};n.push(g(r.x,r.y),g(d.x,r.y),g(d.x,d.y),g(r.x,d.y))}return I([H(n.map(d=>t.localToMap(d)))],t.spatialReference,t.doUnnormalization,!0)}function tt(e,t,i){let a=t.mapToLocalMultiple(e);if(a.length===1){const c=a[0];a=[g(c.x-48,c.y+48),g(c.x+48,c.y-48),g(c.x+48,c.y-48),g(c.x-48,c.y+48)]}const n=[],r={x:a[0].x,y:a[0].y},s={x:a[1].x,y:a[1].y};if(i){const p=Math.round(s.x-r.x),c=Math.round(s.y-r.y);n.push(g(r.x-p,r.y-c),g(s.x,r.y-c),g(s.x,s.y),g(r.x-p,s.y))}else n.push(g(r.x,r.y),g(s.x,r.y),g(s.x,s.y),g(r.x,s.y));return I([H(n.map(p=>t.localToMap(p)))],t.spatialReference,t.doUnnormalization,!0)}function ee(e,t,i,a){const n=t.mapToLocalMultiple(e);let r=null,s=null;if(i)r=n[0],s=n[1];else{const m=n[0],w=n[1],V=Math.round(w.x-m.x),T=Math.round(w.y-m.y),M=Math.max(Math.abs(V),Math.abs(T));r=g(V>0?m.x+M/2:m.x-M/2,T>0?m.y+M/2:m.y-M/2),s=g(Math.abs(V)>Math.abs(T)?r.x-M/2:r.x,Math.abs(V)>Math.abs(T)?r.y:r.y-M/2)}const p=t.localToMap(r),c=t.localToMap(s);if(f(p)||f(c))return null;t.doUnnormalization&&Ge([[p,c]],t.spatialReference);const o=K(p,t.spatialReference),d=K(c,t.spatialReference),v=De(t.spatialReference);let _=0;if(ae(t.spatialReference))_=v*He(o,d,null);else{const m=r.x-s.x,w=r.y-s.y;_=v*Math.sqrt(m*m+w*w)*(a||1)}const S=new $e({center:o,radius:_,radiusUnit:"meters",spatialReference:t.spatialReference});return I(S.rings,S.spatialReference,!1)}function it(e,t,i){const a=t.mapToLocalMultiple(e),n=a[0],r=a[1],s=Math.round(r.x-n.x),p=Math.round(r.y-n.y),c=g(i?n.x:n.x+s/2,i?n.y:n.y+p/2),o=i?s:s/2,d=i?p:p/2,v=60,_=[],S=2*Math.PI/v;for(let m=0;m<v;m++){const w=Math.cos(m*S),V=Math.sin(m*S),T=g(o*w+c.x,d*V+c.y);_.push(T)}return _.push(_[0]),I([H(_.map(m=>t.localToMap(m)))],t.spatialReference,t.doUnnormalization,!1)}let y=class extends Ee(U.EventedMixin(ze)){constructor(e){super(e),this._graphic=null,this.defaultZ=0,this.geometryType=null,this.hasZ=!0,this.mode=null,this.snappingManager=null,this.snapToScene=!1}initialize(){this.internalGraphicsLayer=new Fe({listMode:"hide",internal:!0}),this.view.map.layers.add(this.internalGraphicsLayer),this.drawOperation=this.makeDrawOperation(),this.handles.add([this.drawOperation.on("vertex-add",e=>this.onVertexAdd(e)),this.drawOperation.on("vertex-remove",e=>this.onVertexRemove(e)),this.drawOperation.on("vertex-update",e=>this.onVertexUpdate(e)),this.drawOperation.on("cursor-update",e=>this.onCursorUpdate(e)),this.drawOperation.on("complete",e=>this.onComplete(e))]),this.finishToolCreation()}destroy(){this.drawOperation=G(this.drawOperation),this._destroyAllVisualisations(),this.view.map.remove(this.internalGraphicsLayer),this.internalGraphicsLayer=G(this.internalGraphicsLayer),this._set("view",null)}get canRedo(){return this.drawOperation.canRedo}get canUndo(){return this.drawOperation.canUndo}set centered(e){this._set("centered",e),this._updateGraphic()}set enabled(e){this.drawOperation.interactive=e,this._set("enabled",e)}set forceUniformSize(e){this._set("forceUniformSize",e),this._updateGraphic()}get graphic(){return this._graphic}set graphicSymbol(e){this._set("graphicSymbol",e),l(this._graphic)&&(this._graphic.symbol=e)}get updating(){var e,t;return(e=(t=this.drawOperation)==null?void 0:t.updating)!=null&&e}completeCreateOperation(){this.drawOperation.complete()}onInputEvent(e){this.drawOperation.onInputEvent(e)}redo(){this.drawOperation.redo()}reset(){}undo(){this.drawOperation.undo()}_createGraphic(e){this._graphic=new We(R(C({},this.graphicProperties),{geometry:e,symbol:this.graphicSymbol})),this.internalGraphicsLayer.add(this._graphic),this.handles.add(this.initializeGraphic(this._graphic)),this.notifyChange("graphic"),this.handles.add(Ze(()=>{l(this._graphic)&&(this.internalGraphicsLayer.remove(this._graphic),this._graphic=G(this._graphic))}),F)}_destroyAllVisualisations(){this.handles.remove(O.outline),this.handles.remove(O.regularVertices),this.handles.remove(O.activeVertex),this.handles.remove(F)}_getCreateOperationGeometry(e={operationComplete:!1}){if(this.drawOperation==null||this.drawOperation.numVertices===0)return null;const t=this.drawOperation.stagedVertex,i=this.drawOperation.committedVertices,a=i.slice();l(t)&&a.push(this.drawOperation.coordinateHelper.pointToArray(t));const n=l(t)?this.drawOperation.coordinateHelper.pointToArray(t):i.splice(-1)[0],r={regularVertices:null,activeVertex:null,full:null,outline:null},s=a.length,p=this.drawOperation.spatialReference,c=this.view.type==="3d"&&this.view.viewingMode==="global";switch(this.geometryType){case"point":r.regularVertices=i,r.activeVertex=n,r.full=this.drawOperation.coordinateHelper.arrayToPoint(a[0]);break;case"multipoint":r.regularVertices=i,r.activeVertex=n,s>0&&(r.full=et(a,p));break;case"polyline":r.regularVertices=i,r.activeVertex=n,s>0&&(r.full=X([a],p,c));break;case"polygon":r.regularVertices=i,r.activeVertex=n,s>0&&(r.full=I([a],p,c,!0));break;case"circle":if(s>0){const o=J(this.view,a[0]);if(s===1&&e.operationComplete){const d=a[0],v=o.makeMapPoint(d[0]+te*this.view.resolution,d[1]);r.full=ee([d,v],o,!0)}else s===2&&(r.full=this.forceUniformSize?ee(a,o,this.centered):it(a,o,this.centered))}break;case"rectangle":if(s>0){const o=J(this.view,a[0]);if(s===1&&e.operationComplete){const d=a[0],v=o.makeMapPoint(d[0]+te*this.view.resolution,d[1]);r.full=Y([d,v],o,!0)}else s===2&&(r.full=this.forceUniformSize?Y(a,o,this.centered):tt(a,o,this.centered))}break;default:return null}switch(this.geometryType){case"point":case"multipoint":break;case"polyline":case"polygon":s>1&&(r.outline=X([a],p,c));break;case"circle":case"rectangle":l(r.full)&&r.full.type==="polygon"&&(r.outline=I(r.full.rings,p,c))}return r}initializeGraphic(e){return null}onComplete(e){this._updateGraphic();let t=null;if(this.drawOperation.isCompleted){const i=this._getCreateOperationGeometry({operationComplete:!0});l(i)&&(f(this._graphic)?this._createGraphic(i.full):this._graphic.geometry=i.full,t=Ue(this._graphic).clone())}this.emit("complete",C({graphic:t},e))}onCursorUpdate(e){this._updateGraphic(),this.emit("cursor-update",e)}onDeactivate(){this.drawOperation.isCompleted||this.drawOperation.cancel()}onVertexAdd(e){this._updateGraphic(),this.emit("vertex-add",e)}onVertexRemove(e){this._updateGraphic(),this.emit("vertex-remove",e)}onVertexUpdate(e){this._updateGraphic(),this.emit("vertex-update",e)}_updateGraphic(){const e=this._getCreateOperationGeometry();f(e)?this._destroyAllVisualisations():(l(e.outline)?this.handles.add(this.onOutlineChanged(e.outline),O.outline):this.handles.remove(O.outline),l(e.regularVertices)?this.handles.add(this.onRegularVerticesChanged(e.regularVertices),O.regularVertices):this.handles.remove(O.regularVertices),l(e.activeVertex)?this.handles.add(this.onActiveVertexChanged(e.activeVertex),O.activeVertex):this.handles.remove(O.activeVertex),l(e.full)?f(this._graphic)?this._createGraphic(e.full):this._graphic.geometry=e.full:this.handles.remove(F))}};h([u({value:!0})],y.prototype,"centered",null),h([u({nonNullable:!0})],y.prototype,"defaultZ",void 0),h([u()],y.prototype,"drawOperation",void 0),h([u({value:!0})],y.prototype,"enabled",null),h([u({value:!0})],y.prototype,"forceUniformSize",null),h([u({constructOnly:!0})],y.prototype,"geometryType",void 0),h([u()],y.prototype,"graphic",null),h([u({constructOnly:!0})],y.prototype,"graphicProperties",void 0),h([u()],y.prototype,"graphicSymbol",null),h([u({constructOnly:!0})],y.prototype,"hasZ",void 0),h([u({constructOnly:!0})],y.prototype,"mode",void 0),h([u()],y.prototype,"snappingManager",void 0),h([u()],y.prototype,"snapToScene",void 0),h([u({readOnly:!0})],y.prototype,"type",void 0),h([u({readOnly:!0})],y.prototype,"updating",null),h([u({constructOnly:!0,nonNullable:!0})],y.prototype,"view",void 0),y=h([se("esri.views.draw.DrawGraphicTool")],y);const F="create-operation-graphic",O={outline:"outline-visual",regularVertices:"regular-vertices-visual",activeVertex:"active-vertex-visual"};function ct(e){switch(e){case"point":case"polyline":case"polygon":case"multipoint":return e;case"circle":case"rectangle":return"segment";default:return null}}const te=48;class at{constructor({grabbableForEvent:t}){this.events=new U,this.interactive=!0,this.selectable=!1,this.cursor=null,this.grabbable=!0,this.grabbableForEvent=t}intersectionDistance(t,i){return 0}attach(){}detach(){}}const de="click";class rt{constructor(){this.next=new q}createSnapDragEventPipelineStep({predicate:t=()=>!0,cancel:i,snappingManager:a,snappingContext:n,updatingHandles:r}){if(f(a))return o=>o;let s=null,p=null;const c=()=>{s=k(s),a.doneSnapping(),l(p)&&p.frameTask.remove(),p=null};return i.next(o=>(c(),o)),this.next=new q,o=>{if(!t(o))return o;if(s=k(s),o.action==="start"){const d=a.view.type==="3d"?a.view.resourceController.scheduler.registerTask(ne.SNAPPING):oe;p={context:new Z({editGeometryOperations:n.editGeometryOperations,elevationInfo:n.elevationInfo,pointer:n.pointer,vertexHandle:l(o.info)?o.info.handle:null,excludeFeature:n.excludeFeature,visualizer:n.visualizer}),originalPos:l(o.snapOrigin)?n.coordinateHelper.vectorToDehydratedPoint(o.snapOrigin):o.mapStart,frameTask:d}}if(l(p)){const d=p.context.coordinateHelper.vectorToDehydratedPoint(p.context.coordinateHelper.arrayToVector([p.originalPos.x,p.originalPos.y,p.originalPos.z]));d.x+=o.mapEnd.x-o.mapStart.x,d.y+=o.mapEnd.y-o.mapStart.y;const v=o.mapStart.x-p.originalPos.x,_=o.mapStart.y-p.originalPos.y,S=R(C({},o),{action:"udpate"}),m=p.context,w=a.update(d,p.context);if(o.mapEnd.x=w.x+v,o.mapEnd.y=w.y+_,o.action!=="end"){const V=p.frameTask;s=pe(async T=>{const M=await V.schedule(()=>a.snap(d,m,T),T);if(M.valid){const $=await V.schedule(()=>M.apply(),T);W($,w)||(S.mapEnd.x=$.x+v,S.mapEnd.y=$.y+_,this.next.execute(S))}}),r.addPromise(s.promise)}}return o.action==="end"&&c(),o}}}let x=class extends U.EventedMixin(Le){constructor(e){super(e),this._createOperationCompleted=!1,this._pointerDownStates=new Set,this._snappingPipeline=new rt,this._snappingTask=null,this._stagedVertex=null,this.snapToSceneEnabled=null,f(e.elevationInfo)&&(this.elevationInfo={mode:e.hasZ?"absolute-height":"on-the-ground",offset:0})}initialize(){var e,t;this.coordinateHelper=qe(this.hasZ,this.hasM,this.view.spatialReference);const i=this.view.type==="3d"?(e=this.view)==null||(t=e.resourceController)==null?void 0:t.scheduler:null;this._frameTask=i?i.registerTask(ne.SNAPPING):oe;const a="viewingMode"in this.view.state?this.view.state.viewingMode:Ae.Local,n=this.geometryType==="segment"||this.geometryType==="multipoint"?"polyline":this.geometryType;this._editGeometryOperations=new Qe(new Je(n,this.coordinateHelper,a)),this._activeComponent=new Ke(this.spatialReference,a),this._editGeometryOperations.data.components.push(this._activeComponent),this.handles.add(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],r=>{const s=r.vertices.map(c=>({componentIndex:0,vertexIndex:c.index,coordinates:this.coordinateHelper.vectorToArray(c.pos)})),p=s.map(c=>c.coordinates);switch(r.type){case"vertex-add":this.emit(r.type,R(C({},r),{added:p,vertices:s}));break;case"vertex-update":this.emit(r.type,R(C({},r),{updated:p,vertices:s}));break;case"vertex-remove":this.emit(r.type,R(C({},r),{removed:p,vertices:s}))}})),this._manipulator=new at({grabbableForEvent:r=>this.drawingMode!=="click"||r.pointerType==="touch"&&this._snappingEnabled&&this._pointerDownStates.size===1}),this.manipulators.add(this._manipulator),this._manipulator.grabbable=this.geometryType!=="point",this.handles.add([this._createManipulatorDragPipeline(this._manipulator),this._manipulator.events.on("immediate-click",r=>this._onImmediateClick(r)),this._manipulator.events.on("immediate-double-click",r=>this._onImmediateDoubleClick(r))])}destroy(){this._editGeometryOperations=G(this._editGeometryOperations),this._frameTask=je(this._frameTask)}get _snappingEnabled(){return l(this.snappingManager)&&this.snappingManager.options.effectiveEnabled}get canRedo(){return this._editGeometryOperations.canRedo}get canUndo(){return this._editGeometryOperations.canUndo}get committedVertices(){return this._activeComponent.vertices.map(e=>this.coordinateHelper.vectorToArray(e.pos))}set drawingMode(e){this._set("drawingMode",e!=null?e:de)}get hasStagedVertex(){return l(this._stagedVertex)}get interactive(){return this._manipulator.interactive}set interactive(e){this._manipulator.interactive=e}get isCompleted(){return this._createOperationCompleted}get numCommittedVertices(){return this._activeComponent.vertices.length}get numVertices(){return l(this._stagedVertex)?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}get spatialReference(){return this.view.spatialReference}get stagedVertex(){return this._stagedVertex}set stagedVertex(e){if(f(e))this.discardStagedVertex();else if(!l(this._stagedVertex)||!W(this._stagedVertex,e)){if(f(this._stagedVertex))this._stagedVertex=re(e);else{if(W(this._stagedVertex,e))return;this._stagedVertex.x=e.x,this._stagedVertex.y=e.y,this._stagedVertex.z=e.z,this._stagedVertex.m=e.m,this._stagedVertex.hasZ=e.hasZ,this._stagedVertex.hasM=e.hasM,this._stagedVertex.spatialReference=e.spatialReference}this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)}],operation:"apply",type:"vertex-update"})}}get updating(){return this.updatingHandles.updating}get vertices(){const e=this.committedVertices;return l(this._stagedVertex)&&e.push(this.coordinateHelper.pointToArray(this._stagedVertex)),e}cancel(){this.complete({aborted:!0})}commitStagedVertex(){if(this._snappingTask=k(this._snappingTask),l(this._stagedVertex)){const e=this._stagedVertex;this._stagedVertex=null,this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(e))}}complete(e){const t=e&&e.aborted||!1;k(this._snappingTask),l(this.snappingManager)&&this.snappingManager.doneSnapping(),this.geometryType==="segment"||this.geometryType==="point"?this.commitStagedVertex():this.discardStagedVertex();const i=this.geometryType==="multipoint"&&this.numVertices===0||this.geometryType==="polyline"&&this.numVertices<2||this.geometryType==="polygon"&&this.numVertices<3;this._createOperationCompleted=!i,(this.isCompleted||t)&&this.emit("complete",{vertices:this.vertices.map((a,n)=>({componentIndex:0,vertexIndex:n,coordinates:a})),aborted:t,type:"complete"})}discardStagedVertex(){this._stagedVertex=null}onInputEvent(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}}redo(){this._editGeometryOperations.redo()}undo(){l(this.snappingManager)&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()}_closeOnClickVertexIndex(e){const t=this._activeComponent;if(this.geometryType==="polygon"&&t.vertices.length>2){if(this._vertexWithinPointerDistance(t.vertices[0].pos,e))return 0;if(this._vertexWithinPointerDistance(t.vertices[t.vertices.length-1].pos,e))return t.vertices.length-1}return null}_createManipulatorDragPipeline(e){switch(this.drawingMode){case"click":return this._createManipulatorDragPipelineClick(e);case"freehand":return this._createManipulatorDragPipelineFreehand(e);case"hybrid":return this._createManipulatorDragPipelineHybrid(e)}}_createManipulatorDragPipelineClick(e){return z(e,(t,i,a,n)=>{const r=n==="touch"&&this._snappingEnabled;!this.isCompleted&&r&&(i.next(this._screenToMapDragEventStep()).next(s=>(s.action==="start"&&(this.stagedVertex=s.mapStart,(this.geometryType==="segment"||r&&this.numVertices===0)&&this.commitStagedVertex()),s)).next(this._snappingPipeline.createSnapDragEventPipelineStep({predicate:()=>r,cancel:a,snappingManager:this.snappingManager,snappingContext:new Z({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:n,visualizer:this.snappingVisualizer}),updatingHandles:this.updatingHandles}),this._snappingPipeline.next).next(s=>(r&&(this.stagedVertex=s.mapEnd,s.action==="end"&&this.commitStagedVertex()),s)).next(s=>(s.action==="end"&&(this.geometryType!=="segment"&&this.geometryType!=="point"||this.complete()),s)),a.next(()=>{r&&l(this.snappingManager)&&this.snappingManager.doneSnapping()}))})}_createManipulatorDragPipelineFreehand(e){return z(e,(t,i)=>{this.isCompleted||i.next(this._screenToMapDragEventStep()).next(a=>(a.action==="start"&&(f(this.stagedVertex)&&(this.stagedVertex=a.mapStart),this.geometryType==="segment"&&this.commitStagedVertex()),a)).next(a=>{switch(a.action){case"start":case"update":this.stagedVertex=a.mapEnd,this.geometryType!=="polygon"&&this.geometryType!=="polyline"||this.commitStagedVertex();break;case"end":this.complete()}return a})})}_createManipulatorDragPipelineHybrid(e){return z(e,(t,i)=>{this.isCompleted||i.next(this._screenToMapDragEventStep()).next(a=>(a.action==="start"&&(f(this.stagedVertex)&&(this.stagedVertex=a.mapStart),this.commitStagedVertex()),a)).next(a=>{switch(a.action){case"start":case"update":this.stagedVertex=a.mapEnd,this.geometryType!=="polygon"&&this.geometryType!=="polyline"||this.commitStagedVertex();break;case"end":this.geometryType!=="segment"&&this.geometryType!=="point"||this.complete()}return a})})}_getDrawSurface(){if(f(this.elevationDrawSurface))return this.drawSurface;if(!this.coordinateHelper.hasZ)return this.elevationDrawSurface.defaultZ=null,this.elevationDrawSurface;let e=this.defaultZ,t=!1;l(this.elevationInfo)&&this.elevationInfo.mode==="absolute-height"&&(t=!0),l(this.snapToSceneEnabled)&&(t=this.snapToSceneEnabled),l(this.elevationInfo)&&this.elevationInfo.mode==="on-the-ground"&&(t=!1);const i=this._activeComponent.vertices.length;return(this.geometryType==="segment"||this.geometryType==="polygon")&&i>0&&(e=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),t=!1),t?this.drawSurface:(this.elevationDrawSurface.defaultZ=e,this.elevationDrawSurface)}_mapToScreen(e){return this._getDrawSurface().mapToScreen(e)}_onHold(e){k(this._snappingTask),this.drawingMode==="click"&&e.pointerType==="touch"&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()}_onImmediateClick(e){if(e.pointerType==="mouse"&&e.button===2||this._manipulator.dragging)return;const t=this._activeComponent,i=this._closeOnClickVertexIndex(e.screenPoint);if(l(i))return e.stopPropagation(),this.discardStagedVertex(),void this.complete();const a=this._screenToMap(e.screenPoint);if(l(a))switch(this.drawingMode){case"freehand":this.geometryType==="point"&&(this.hasStagedVertex?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(a)),this.complete());break;case"click":case"hybrid":this._snappingTask=k(this._snappingTask),this.hasStagedVertex?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(a)),(this.geometryType==="point"||this.geometryType==="segment"&&t.vertices.length===2||this.geometryType==="segment"&&this.drawingMode==="hybrid"&&t.vertices.length===1)&&this.complete()}e.stopPropagation()}_onImmediateDoubleClick(e){this._manipulator.dragging||this.geometryType==="point"||(this.complete(),e.stopPropagation())}_onPointerMove(e){if(k(this._snappingTask),this._manipulator.dragging||this._pointerDownStates.has(e.pointerId)||this._manipulator.grabbing||!this._manipulator.interactive)return;const t=Ne(e.x,e.y),i=this._closeOnClickVertexIndex(t);if(l(i)){this.discardStagedVertex();const a={componentIndex:0,vertexIndex:i,coordinates:this.coordinateHelper.vectorToArray(this._activeComponent.vertices[i].pos)};this.emit("cursor-update",{updated:null,vertices:[a],operation:"apply",type:"vertex-update"})}else{const a=this._screenToMap(t);if(this._manipulator.cursor=l(a)?"crosshair":null,l(a))if(l(this.snappingManager)){const n=this.snappingManager,r=new Z({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:e.pointerType,visualizer:this.snappingVisualizer});this.stagedVertex=n.update(a,r),this._snappingTask=pe(async s=>{const p=await this._frameTask.schedule(()=>n.snap(a,r,s),s);p.valid&&await this._frameTask.schedule(()=>{this.stagedVertex=p.apply()},s)}),this.updatingHandles.addPromise(this._snappingTask.promise)}else this.stagedVertex=a}e.stopPropagation()}_screenToMap(e){return this._getDrawSurface().screenToMap(e)}_screenToMapDragEventStep(){let e=null;return t=>{if(t.action==="start"&&(e=this._screenToMap(t.screenStart)),f(e))return null;const i=this._screenToMap(t.screenEnd);return l(i)?R(C({},t),{mapStart:e,mapEnd:i}):null}}_vertexWithinPointerDistance(e,t){const a=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(e));return!!l(a)&&st(a,t,25)}};function st(e,t,i){const a=e.x-t.x,n=e.y-t.y;return a*a+n*n<=i}h([u()],x.prototype,"defaultZ",void 0),h([u({value:de})],x.prototype,"drawingMode",null),h([u({constructOnly:!0})],x.prototype,"elevationDrawSurface",void 0),h([u({constructOnly:!0})],x.prototype,"elevationInfo",void 0),h([u({constructOnly:!0})],x.prototype,"geometryType",void 0),h([u({constructOnly:!0})],x.prototype,"hasM",void 0),h([u({constructOnly:!0})],x.prototype,"hasZ",void 0),h([u({constructOnly:!0})],x.prototype,"manipulators",void 0),h([u({constructOnly:!0})],x.prototype,"drawSurface",void 0),h([u({constructOnly:!0})],x.prototype,"snappingManager",void 0),h([u({constructOnly:!0})],x.prototype,"snappingVisualizer",void 0),h([u()],x.prototype,"snapToSceneEnabled",void 0),h([u({readOnly:!0})],x.prototype,"updating",null),h([u({constructOnly:!0})],x.prototype,"view",void 0),x=h([se("esri.views.draw.DrawOperation")],x);class ht{constructor(t,i,a,n=null){this.elevationInfo=t,this.defaultZ=i,this.view=a,this.excludeGraphics=n}screenToMap(t){if(l(this.defaultZ))return this.view.sceneIntersectionHelper.intersectElevationFromScreen(Q(t.x,t.y),this.elevationInfo,this.defaultZ,this.excludeGraphics);const i=this.view.sceneIntersectionHelper.intersectElevationFromScreen(Q(t.x,t.y),this.elevationInfo,0,this.excludeGraphics);return l(i)&&(i.z=void 0),i}mapToScreen(t){const i=le(t.x,t.y,ce(this.view,t,this.elevationInfo),t.spatialReference);return this.view.toScreen(i)}}class dt{constructor(t,i,a=[]){this.view=t,this.elevationInfo=i,this.exclude=a}screenToMap(t){const i=this.view.toMap(t,{exclude:this.exclude});return l(i)&&(i.z=Be(i,this.view,this.elevationInfo)),i}mapToScreen(t){let i=t;return l(this.elevationInfo)&&(i=le(t.x,t.y,ce(this.view,t,this.elevationInfo),t.spatialReference)),this.view.toScreen(i)}}class ut{constructor(t){this.view=t,this.screenToMap=i=>t.toMap(i),this.mapToScreen=i=>t.toScreen(i)}}export{ct as G,y as _,rt as a,x as b,ut as c,dt as n,ht as r};
