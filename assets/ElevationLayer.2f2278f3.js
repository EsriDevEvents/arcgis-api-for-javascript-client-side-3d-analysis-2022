var f=Object.defineProperty,S=Object.defineProperties;var T=Object.getOwnPropertyDescriptors;var c=Object.getOwnPropertySymbols;var x=Object.prototype.hasOwnProperty,_=Object.prototype.propertyIsEnumerable;var h=(e,t,r)=>t in e?f(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))x.call(t,r)&&h(e,r,t[r]);if(c)for(var r of c(t))_.call(t,r)&&h(e,r,t[r]);return e},d=(e,t)=>S(e,T(t));import{aB as $,nH as b,nI as I,nJ as D,nK as V,nL as E,iP as L,O as u,b4 as O,nM as C,bU as y,nN as j,ax as v,J as s,K as o,nO as U,nP as A,hX as J,L as N,a5 as P}from"./vendor.c28ea743.js";import{s as q}from"./ArcGISCachedService.4584c3d6.js";import"./TilemapCache.424c2b03.js";const m=$.getLogger("esri.layers.ElevationLayer");let i=class extends q(b(I(D(V(P))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=E()}normalizeCtorArgs(e,t){return typeof e=="string"?p({url:e},t):e}destroy(){this._lercDecoder=L(this._lercDecoder)}set minScale(e){this.constructed&&m.warn(`${this.declaredClass}.minScale support has been removed (since 4.5)`)}get minScale(){}set maxScale(e){this.constructed&&m.warn(`${this.declaredClass}.maxScale support has been removed (since 4.5)`)}get maxScale(){}readVersion(e,t){let r=t.currentVersion;return r||(r=9.3),r}load(e){const t=u(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:r=>{for(let a=0;a<r.typeKeywords.length;a++)if(r.typeKeywords[a].toLowerCase()==="elevation 3d layer")return!0;throw new O("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(C).then(()=>this._fetchImageService(t))),Promise.resolve(this)}fetchTile(e,t,r,a){const l=u((a=a||{signal:null}).signal)?a.signal:a.signal=new AbortController().signal,g={responseType:"array-buffer",signal:l},w={noDataValue:a.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(e,t,r,a)).then(()=>y(this.getTileUrl(e,t,r),g)).then(n=>this._lercDecoder.decode(n.data,w,l)).then(n=>({values:n.pixelData,width:n.width,height:n.height,maxZError:n.fileInfo.maxZError,noDataValue:n.noDataValue,minValue:n.minValue,maxValue:n.maxValue}))}getTileUrl(e,t,r){const a=!this.tilemapCache&&this.supportsBlankTile,l=j(d(p({},this.parsedUrl.query),{blankTile:!a&&null}));return`${this.parsedUrl.path}/tile/${e}/${t}/${r}${l?"?"+l:""}`}async queryElevation(e,t){const{ElevationQuery:r}=await import("./vendor.c28ea743.js").then(function(a){return a.vG});return v(t),new r().query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:r}=await import("./vendor.c28ea743.js").then(function(a){return a.vG});return v(t),new r().createSampler(this,e,t)}_fetchTileAvailability(e,t,r,a){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,r,a):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:p({f:"json"},this.parsedUrl.query),responseType:"json",signal:e},r=await y(this.parsedUrl.path,t);r.ssl&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r.data,this.read(r.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};s([o({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),s([o({readOnly:!0,type:U})],i.prototype,"heightModelInfo",void 0),s([o({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([o({type:["show","hide"]})],i.prototype,"listMode",void 0),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],i.prototype,"minScale",null),s([o({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}}})],i.prototype,"maxScale",null),s([o({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],i.prototype,"opacity",void 0),s([o({type:["ArcGISTiledElevationServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([o()],i.prototype,"sourceJSON",void 0),s([o({json:{read:!1},value:"elevation",readOnly:!0})],i.prototype,"type",void 0),s([o(A)],i.prototype,"url",void 0),s([o()],i.prototype,"version",void 0),s([J("version",["currentVersion"])],i.prototype,"readVersion",null),i=s([N("esri.layers.ElevationLayer")],i),i.prototype.fetchTile.__isDefault__=!0;const F=i;export{F as default};
