import"./modulepreload-polyfill.b7f2da20.js";import{a as F,i as E,g as m,d as u,j as w,n as f,o as y,e as A,f as d,k as I,l as L,m as S}from"./utils.ed0797c0.js";import"./vendor.c28ea743.js";F();const e=E(A);e.popup.defaultPopupTemplateEnabled=!0;m(d,e).then(a=>{a.outFields=[u.solarAreaField],w(a)});const{graphicsLayer:c,pointGraphic:g}=f(e,a=>l(a.geometry));y("statistic-query",()=>{e.map.layers.add(c),l(g.geometry)});y("statistic-query-server",()=>{e.map.layers.remove(c),s&&s.remove(),l(g.geometry,!0)});let s;async function l(a,n=!1){I(e);const o=await m(d,e);o.outFields=[u.solarAreaField,u.usageField];const i=await e.whenLayerView(o),t=i.createQuery();t.outStatistics=L,t.where="solarAreaSuitableM2 BETWEEN 200 AND 500";const r=i.createQuery();r.where="solarAreaSuitableM2 BETWEEN 200 AND 500",n||(t.geometry=a,t.distance=100,t.units="meters",r.geometry=a,r.distance=100,r.units="meters");const[p,h]=n?await Promise.all([o.queryFeatures(t),o.queryFeatures(r)]):await Promise.all([i.queryFeatures(t),i.queryFeatures(r)]);document.getElementById("sum").innerHTML="Total area: "+p.features[0].attributes[S].toFixed(1),s&&s.remove(),s=i.highlight(h.features)}
